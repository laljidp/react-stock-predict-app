{"version":3,"file":"static/js/413.dccda187.chunk.js","mappings":"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","sources":["Utils/index.js","components/Prediction/UsersList.js","components/Prediction/TimeRemaining.js","components/Prediction/PredictionLiveWidget.js","components/UI/Buttons.js","components/Prediction/PredictionCard.js","components/UI/NotDataFound.js","services/firebaseConverters/predictionConverter.js","services/firebase/queries.js","services/firebase/prediction.firebase.js","components/Prediction/PredictionList.js","components/UI/Tabs.js","services/finhub/index.js","components/Prediction/CreatePredictionModal.js","components/Prediction/CompletedPredictions.js","components/Prediction/IssueChallengeModal.js","components/Prediction/SwitchUserModal.js","components/Home/Home.js","components/Home/index.js","services/firebase/users.firebase.js"],"sourcesContent":["import moment from 'moment';\n\nexport function stringToColor(string) {\n  let hash = 0;\n  let i;\n\n  /* eslint-disable no-bitwise */\n  for (i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = '#';\n\n  for (i = 0; i < 3; i += 1) {\n    const value = (hash >> (i * 8)) & 0xff;\n    color += `00${value.toString(16)}`.slice(-2);\n  }\n  /* eslint-enable no-bitwise */\n\n  return color;\n}\n\nexport function stringAvatar(name) {\n  return {\n    sx: {\n      bgcolor: stringToColor(name),\n    },\n    children: `${name.charAt(0)}`,\n  };\n}\n\nexport function debounce(func) {\n  let timer;\n  // eslint-disable-next-line func-names\n  return function (...args) {\n    const context = this;\n    if (timer) clearTimeout(timer);\n    timer = setTimeout(() => {\n      timer = null;\n      func.apply(context, args);\n    }, 500);\n  };\n}\n\nexport function calculateStopLoss(data) {\n  // data = { target, percentage, stockPrice }\n  if (data.target && data.percentage) {\n    const target = Number(data.target);\n    const price = Number(data?.stockPrice);\n    const percentage = Number(data?.percentage);\n    const percentageValue = (price / 100) * percentage;\n    let afterPercentageTarget = 0;\n    if (target > price) {\n      afterPercentageTarget = price - percentageValue;\n    } else {\n      afterPercentageTarget = price + percentageValue;\n    }\n    return { afterPercentageTarget, percentage };\n  }\n  return { afterPercentageTarget: '', percentage: data.percentage };\n}\n\nexport const calculateStopLossPercentageByPrice = (data) => {\n  // { stockPrice, targetPrice }\n  const stockPrice = Number(data.stockPrice);\n  const targetPrice = Number(data.targetPrice);\n  const percentage = ((targetPrice - stockPrice) / ((stockPrice + targetPrice) / 2)) * 100;\n  return percentage.toFixed(2);\n};\n\nexport const validatePredictionData = (payload) => {\n  const errors = [];\n  if (!payload.target) errors.push('Target field required!');\n  if (!payload.predictionDateTime) errors.push('Please select prediction date.');\n  if (!payload.afterPercentageTarget || !payload.percentage)\n    errors.push('Please set the Stoploss field');\n\n  return errors;\n};\n\nexport const getFormattedChallengePayload = (prediction, currentUser, newTarget) => {\n  const formattedPrediction = { ...prediction };\n\n  formattedPrediction.challenge = {\n    userId: formattedPrediction.userId,\n    userName: formattedPrediction.userName,\n    predictionID: formattedPrediction.id,\n  };\n  formattedPrediction.userId = currentUser.id;\n  formattedPrediction.userName = currentUser.name;\n  formattedPrediction.target = newTarget;\n  // For the challenge we need to calculte stop loss on opposite direction.\n  const { afterPercentageTarget, percentage } = calculateStopLoss({\n    target: newTarget,\n    stockPrice: prediction?.stock.price.c,\n    percentage: formattedPrediction.percentage,\n  });\n  formattedPrediction.afterPercentageTarget = afterPercentageTarget;\n  formattedPrediction.percentage = percentage;\n\n  return formattedPrediction;\n};\n\nexport const calculateDaysLeft = (date) => {\n  const predictionDate = moment(date);\n  const currentDate = moment();\n  return predictionDate.diff(currentDate, 'days');\n};\n\nexport const getCallType = (stockPrice, targetPrice) => (targetPrice > stockPrice ? 'buy' : 'sell');\n\nexport const filterCommonStock = (data = []) => {\n  if (!data || data.length === 0) return [];\n\n  return data.filter(\n    (r) => r.type?.toLowerCase() === 'Common Stock'.toLowerCase() && !r?.symbol.includes('.'),\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from '@mui/material/Avatar';\nimport Stack from '@mui/system/Stack';\nimport styled from '@emotion/styled';\nimport { Box } from '@mui/material';\nimport { stringAvatar } from '../../Utils';\n\nfunction UsersList({ users = [], onSelectUser }) {\n  return (\n    <Box sx={{ display: 'flex', gridGap: '15px' }}>\n      {users.map((user) => (\n        <Stack\n          onClick={() => onSelectUser(user)}\n          direction=\"row\"\n          spacing={2}\n          key={user.id}\n          sx={{ display: 'grid', textAlign: 'left', cursor: 'pointer' }}\n        >\n          <Avatar sx={{ height: '100px', width: '100px' }} {...stringAvatar(user.name)} />\n          <UserName>{user.name}</UserName>\n        </Stack>\n      ))}\n    </Box>\n  );\n}\n\nconst UserName = styled('small')({\n  margin: '0 !important',\n  textAlign: 'center',\n});\n\nUsersList.propTypes = {\n  users: PropTypes.array,\n  onSelectUser: PropTypes.func.isRequired,\n};\n\nUsersList.defaultProps = {\n  users: [],\n};\n\nexport default UsersList;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\n\nexport default function TimeRemaining({ daysLeft = 0 }) {\n  return (\n    <TimeRemainingSection>\n      <small>Time Remaining</small>\n      <div className=\"time-section\">\n        <span className=\"round\">{daysLeft}</span>\n        <div className=\"day-left-text\">\n          <span className=\"day\">Day</span>\n          <span className=\"left\">Left</span>\n        </div>\n      </div>\n    </TimeRemainingSection>\n  );\n}\n\nconst TimeRemainingSection = styled('div')({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'flex-start',\n  small: {\n    color: '#fff',\n    fontSize: '12px',\n  },\n  '.time-section': {\n    position: 'relative',\n  },\n  '.round': {\n    borderRadius: '50%',\n    padding: '8px',\n    width: '15px',\n    fontSize: '15px',\n    height: '13px',\n    background: 'green',\n    marginLeft: '10px',\n    color: '#fff',\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontWeight: 'bold',\n    border: '3px solid black',\n  },\n  '.day-left-text': {\n    display: 'inline-grid',\n    color: '#fff',\n    fontSize: '10px',\n    width: '25px',\n    position: 'absolute',\n    left: '40px',\n    zIndex: '-1',\n    top: '5px',\n    fontWeight: 'bold',\n    '.day': {\n      backgroundColor: 'red',\n      padding: '0 10px',\n    },\n    '.left': {\n      backgroundColor: 'green',\n      padding: '0 10px',\n    },\n  },\n});\n\nTimeRemaining.propTypes = {\n  daysLeft: PropTypes.number.isRequired,\n};\n","import styled from '@emotion/styled';\nimport propTypes from 'prop-types';\nimport React from 'react';\n\nexport default function PredictionLiveWidget(props) {\n  // eslint-disable-next-line no-unused-vars\n  const { stopLoss, predictionPrice, targetPrice, livePrice } = props;\n  return (\n    <WidgetSection>\n      <div className=\"round-grey stop-loss-section\">\n        <span>${stopLoss}</span>\n      </div>\n      <StockPriceBar />\n      <div className=\"round-grey prediction-section\">\n        <span>${predictionPrice}</span>\n      </div>\n      <StockPriceBar />\n      <div className=\"round-grey target-price-section\">\n        <span>${targetPrice}</span>\n      </div>\n      {/* <span className=\"livePrice\">{livePrice}</span> */}\n    </WidgetSection>\n  );\n}\n\nconst WidgetSection = styled('div')({\n  display: 'inline-flex',\n  color: '#fff',\n  marginTop: '10px',\n  justifyContent: 'center',\n  alignItems: 'center',\n  width: '100%',\n  '.round-grey': {\n    height: '40px',\n    width: '40px',\n    fontSize: '10px',\n    borderRadius: '50%',\n    backgroundColor: '#494f56',\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontWeight: '500',\n  },\n});\n\nconst StockPriceBar = styled('div')({\n  width: '30%',\n  height: '12px',\n  alignContent: 'center',\n  backgroundColor: '#494f56',\n  marginRight: '-2px',\n  marginLeft: '-2px',\n});\n\nPredictionLiveWidget.propTypes = {\n  stopLoss: propTypes.number.isRequired,\n  predictionPrice: propTypes.number.isRequired,\n  targetPrice: propTypes.number.isRequired,\n  livePrice: propTypes.number.isRequired,\n};\n","import Button from '@mui/material/Button';\nimport styled from '@emotion/styled';\n\nexport const PredictGradientButton = styled(Button)({\n  padding: '10px 18px',\n  backgroundColor: 'rgb(34 255 34)',\n  borderRadius: '30px',\n  background: 'radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(34,254,34,1) 54%)',\n  color: 'black',\n  fontWeight: 'bold',\n  textTransform: 'capitalize',\n  '&:disabled': {\n    background: '#dedede',\n  },\n});\n\nexport const PredictButton = styled(Button)({\n  background: '#FF6A6A',\n  borderRadius: '40px',\n  color: '#fff',\n  fontWeight: 600,\n  '&:hover': {\n    backgroundColor: '#FF6A6A',\n  },\n});\n\nexport const ChallengeButton = styled(Button)({\n  borderRadius: '20px',\n  backgroundColor: '#6aff79',\n  textTransform: 'capitalize',\n  padding: '5px 20px',\n  fontWeight: 600,\n  '&:disabled': {\n    backgroundColor: '#dedede',\n  },\n});\n","import styled from '@emotion/styled';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from '@mui/material/Avatar';\nimport Box from '@mui/system/Box';\nimport Chip from '@mui/material/Chip';\nimport predictionCardImage from '../../assets/images/prediction-card.jpeg';\nimport TimeRemaining from './TimeRemaining';\nimport PredictionLiveWidget from './PredictionLiveWidget';\nimport { calculateDaysLeft } from '../../Utils';\nimport { ChallengeButton } from '../UI/Buttons';\n\nexport default function PredictionCard({ prediction, isChallengeCard, onChallengeClick }) {\n  const { target, stock, predictionDateTime, afterPercentageTarget, userName } = prediction;\n  return (\n    <Box>\n      <PredictionCardSection>\n        <UserInfoSection>\n          <div className=\"user-info\">\n            <Avatar sx={{ marginLeft: '10px' }} src=\"./broken-image.jpeg\" />\n            <span className=\"p-name\">{userName || 'Predictany007'}</span>\n            {prediction?.challenge?.userName && (\n              <Chip\n                sx={{ marginLeft: '10px', textAlign: 'right' }}\n                label=\"C\"\n                color=\"primary\"\n                size=\"small\"\n              />\n            )}\n          </div>\n        </UserInfoSection>\n        <StockInfoSection>\n          <div className=\"head\">\n            <div className=\"head-left\">\n              <Avatar color=\"yellow\" alt=\"BTC\" />\n              <span className=\"stock-symbol\">{stock.symbol}</span>\n            </div>\n            <div className=\"head-right\">\n              <div className=\"content\">\n                <strong>Target Price:</strong> <strong className=\"green\">${target}</strong>\n              </div>\n              <div className=\"content\">\n                <strong>Target date:</strong>{' '}\n                <strong className=\"green\">{predictionDateTime}</strong>\n              </div>\n              <div className=\"content\">\n                <strong>Stop-loss:</strong>\n                <strong className=\"danger\">${afterPercentageTarget}</strong>\n              </div>\n            </div>\n          </div>\n          <hr />\n          <TimeRemaining daysLeft={calculateDaysLeft(predictionDateTime)} />\n          <PredictionLiveWidget\n            targetPrice={Number(target)}\n            predictionPrice={stock.price.c}\n            stopLoss={Number(afterPercentageTarget)}\n            livePrice={100}\n          />\n        </StockInfoSection>\n      </PredictionCardSection>\n      {isChallengeCard && (\n        <Box sx={{ textAlign: 'center', padding: '5px 0' }}>\n          <ChallengeButton\n            onClick={() => onChallengeClick(prediction)}\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Challenge\n          </ChallengeButton>\n        </Box>\n      )}\n    </Box>\n  );\n}\n\nconst PredictionCardSection = styled('div')({\n  backgroundColor: 'grey',\n  borderRadius: '4px',\n  backgroundImage: `url(${predictionCardImage})`,\n  objectFit: 'cover',\n  height: '220px',\n  minWidth: '380px',\n  backgroundSize: 'cover',\n  padding: '6px 0',\n});\n\nconst UserInfoSection = styled('div')({\n  width: '70%',\n  boxShadow: '4px -2px 2px 4px #263a47',\n  height: '35px',\n  background: 'black',\n  color: '#ffd230',\n  fontWeight: 'bold',\n  padding: '5px',\n  borderRadius: '10px',\n  opacity: '.9',\n  '.user-info': {\n    display: 'inline-flex',\n    alignItems: 'center',\n    '.p-name': {\n      marginLeft: '10px',\n      fontSize: '20px',\n    },\n  },\n});\n\nconst StockInfoSection = styled('div')({\n  width: '70%',\n  padding: '10px',\n  borderRadius: '4px',\n  boxShadow: '4px -2px 2px 4px #263a47',\n  height: 'calc(100% - 70px)',\n  background: 'black',\n  marginTop: '10px',\n  opacity: '.9',\n  '.head': {\n    height: '40px',\n    display: 'inline-flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%',\n    '.head-left': {\n      color: '#fff',\n      display: 'inline-flex',\n      alignItems: 'center',\n      '.stock-symbol': {\n        fontSize: '25px',\n        marginLeft: '10px',\n      },\n    },\n    '.head-right': {\n      color: '#fff',\n      fontSize: '11px',\n      width: '50%',\n      display: 'grid',\n      gridGap: '2px',\n      '.content': {\n        display: 'inline-flex',\n        justifyContent: 'space-between',\n        alignContent: 'center',\n      },\n      'strong.green': {\n        color: 'green',\n      },\n      'strong.danger': {\n        color: 'red',\n      },\n    },\n  },\n});\n\nPredictionCard.propTypes = {\n  prediction: PropTypes.any.isRequired,\n  isChallengeCard: PropTypes.bool,\n  onChallengeClick: PropTypes.func,\n};\n\nPredictionCard.defaultProps = {\n  isChallengeCard: true,\n  onChallengeClick: () => {},\n};\n","import propTypes from 'prop-types';\nimport React from 'react';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/system/Box';\n\nexport default function NoDataFound({ message }) {\n  return (\n    <Box\n      sx={{\n        border: '1px solid #dedede',\n        borderRadius: '10px',\n        textAlign: 'center',\n        padding: '1rem',\n      }}\n    >\n      <Typography>&#9432; {message}</Typography>\n    </Box>\n  );\n}\n\nNoDataFound.propTypes = {\n  message: propTypes.string.isRequired,\n};\n","import moment from 'moment/moment';\n\nclass Prediction {\n  constructor(prediction) {\n    this.id = prediction.id;\n    this.isSharePublicaly = prediction.isSharePublicaly;\n    this.percentage = prediction.percentage;\n    this.predictionDateTime = prediction.predictionDateTime;\n    this.afterPercentageTarget = prediction.afterPercentageTarget;\n    this.selectedDurationType = prediction.selectedDurationType;\n    this.stock = prediction.stock;\n    this.target = prediction.target;\n    this.userId = prediction.userId;\n    this.userName = prediction.userName;\n    this.challenge = prediction.challenge;\n  }\n\n  getFormattedData() {\n    return {\n      id: this.id,\n      isSharePublicaly: this.isSharePublicaly,\n      percentage: this.percentage,\n      predictionDateTime: moment(this.predictionDateTime.toDate()).format('L'),\n      afterPercentageTarget: parseFloat(this.afterPercentageTarget).toFixed(2),\n      selectedDurationType: this.selectedDurationType,\n      stock: this.stock,\n      target: this.target,\n      userId: this.userId,\n      userName: this.userName,\n      challenge: this.challenge,\n    };\n  }\n}\n\nconst predictionConverter = {\n  toFirestore: (prediction) => ({\n    ...prediction,\n    target: Number(prediction.target),\n    afterPercentageTarget: Number(prediction.afterPercentageTarget),\n    percentage: Number(prediction.percentage),\n    predictionDateTime: new Date(prediction.predictionDateTime),\n  }),\n  fromFirestore: (snapshot, options) => {\n    const data = snapshot.data(options);\n    return new Prediction(data);\n  },\n};\n\nexport default predictionConverter;\n","import { collection, orderBy, query, where } from 'firebase/firestore';\nimport { db } from '.';\nimport predictionConverter from '../firebaseConverters/predictionConverter';\nimport { PREDICTION_COLLECTION } from './prediction.firebase';\n\nexport const getUserPublicPredictionQuery = (userID) =>\n  query(\n    collection(db, PREDICTION_COLLECTION).withConverter(predictionConverter),\n    where('userId', '==', userID),\n    where(\n      'predictionDateTime',\n      '>=',\n      new Date(Date.now() + 1000),\n      orderBy('predictionDateTime', 'desc'),\n    ),\n  );\n\nexport const getPublicPredictionQuery = (userID) =>\n  query(\n    collection(db, PREDICTION_COLLECTION).withConverter(predictionConverter),\n    where('userId', '==', userID),\n    where('predictionDateTime', '>=', new Date(Date.now() + 1000)),\n    where('isSharePublicaly', '==', true),\n    orderBy('predictionDateTime', 'desc'),\n  );\n\nexport const getCompletedPredictionQuery = (userID) =>\n  query(\n    collection(db, PREDICTION_COLLECTION).withConverter(predictionConverter),\n    where('userId', '==', userID),\n    where('predictionDateTime', '<', new Date(Date.now() + 1000)),\n  );\n","import { getDocs, collection, addDoc, updateDoc } from 'firebase/firestore';\nimport { db } from '.';\nimport predictionConverter from '../firebaseConverters/predictionConverter';\nimport {\n  getCompletedPredictionQuery,\n  getPublicPredictionQuery,\n  getUserPublicPredictionQuery,\n} from './queries';\n\nexport const PREDICTION_COLLECTION = 'public_predictions';\n\nexport const fetchUserPredictions = async (userID) => {\n  try {\n    const querySnapshot = await getDocs(getUserPublicPredictionQuery(userID));\n    const data = [];\n    querySnapshot.forEach((doc) => data.push(doc.data().getFormattedData()));\n    return { success: true, data };\n  } catch (err) {\n    console.log('err', err);\n    return { success: false, data: [] };\n  }\n};\n\nexport const createPrediction = async (prediction) => {\n  try {\n    const docRef = await addDoc(\n      collection(db, PREDICTION_COLLECTION).withConverter(predictionConverter),\n      prediction,\n    );\n    await updateDoc(docRef, { id: docRef.id });\n    console.log('Prediction created ==> ', docRef.id);\n    if (docRef.id) {\n      return { success: true, message: 'Prediction added!' };\n    }\n    return { success: false, message: 'Prediction failed to saved' };\n  } catch (err) {\n    console.log('err', err);\n    return { success: false, message: 'Something went wrong!' };\n  }\n};\n\nexport const fetchPublicPredictions = async (userID) => {\n  try {\n    const querySnapshot = await getDocs(getPublicPredictionQuery(userID));\n    // eslint-disable-next-line no-debugger\n    const data = [];\n    querySnapshot.forEach((doc) => data.push(doc.data().getFormattedData()));\n    return { success: true, data };\n  } catch (err) {\n    console.log('err', err);\n    return { success: false, data: [] };\n  }\n};\n\nexport const fetchCompletedPrediction = async (userID) => {\n  try {\n    const querySnapshot = await getDocs(getCompletedPredictionQuery(userID));\n    const data = [];\n    querySnapshot.forEach((doc) => data.push(doc.data().getFormattedData()));\n    return { success: true, data };\n  } catch (err) {\n    console.log('Error while fetching completed predictins', err);\n    return { success: false, message: 'Reuest failed to for complete preidiction data' };\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { onSnapshot } from 'firebase/firestore';\nimport PredictionCard from './PredictionCard';\nimport LoadingProgress from '../UI/LoadingProgress';\nimport NoDataFound from '../UI/NotDataFound';\nimport {\n  fetchPublicPredictions,\n  fetchUserPredictions,\n} from '../../services/firebase/prediction.firebase';\nimport {\n  getPublicPredictionQuery,\n  getUserPublicPredictionQuery,\n} from '../../services/firebase/queries';\n\nexport default function PredictionLists({ userID, isChallengesList, onChallengeClick }) {\n  const [predictions, setPredictions] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const fetchPredictions = async () => {\n    setLoading(true);\n    const result = await fetchUserPredictions(userID);\n    setPredictions(result.data);\n    setLoading(false);\n  };\n\n  const getPublicPredictions = async () => {\n    setLoading(true);\n    const result = await fetchPublicPredictions(userID);\n    setPredictions(result.data);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    let unsubscribe;\n    if (isChallengesList) {\n      getPublicPredictions();\n      unsubscribe = onSnapshot(getPublicPredictionQuery(userID), (querySnapshot) => {\n        const data = [];\n        querySnapshot.forEach((snapshot) => data.push(snapshot.data().getFormattedData()));\n        setPredictions(data);\n      });\n    } else {\n      fetchPredictions();\n      unsubscribe = onSnapshot(getUserPublicPredictionQuery(userID), (querySnapshot) => {\n        const data = [];\n        querySnapshot.forEach((snapshot) => data.push(snapshot.data().getFormattedData()));\n        setPredictions(data);\n      });\n    }\n\n    return () => {\n      if (unsubscribe) {\n        unsubscribe();\n      }\n    };\n  }, []);\n\n  if (loading) {\n    return <LoadingProgress />;\n  }\n\n  return (\n    <PredictionSection>\n      <OverFlowSection>\n        {predictions.map((prediction) => (\n          <PredictionCard\n            key={prediction.id}\n            onChallengeClick={onChallengeClick}\n            prediction={prediction}\n            isChallengeCard={isChallengesList}\n          />\n        ))}\n        {!loading && predictions.length === 0 && (\n          <NoDataFound message=\"No ongoing prediction found\" />\n        )}\n      </OverFlowSection>\n    </PredictionSection>\n  );\n}\n\nPredictionLists.propTypes = {\n  userID: PropTypes.string.isRequired,\n  isChallengesList: PropTypes.bool,\n  onChallengeClick: PropTypes.func,\n};\n\nPredictionLists.defaultProps = {\n  isChallengesList: false,\n  onChallengeClick: () => {},\n};\n\nconst PredictionSection = styled('div')({\n  padding: '5px',\n  width: '100%',\n});\n\nconst OverFlowSection = styled('div')({\n  alignItems: 'flex-start',\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'nowrap',\n  overflowX: 'auto',\n  overflowY: 'hidden',\n  gridGap: '18px',\n  '::-webkit-scrollbar': {\n    height: '10px',\n    margin: '5px',\n  },\n  '::-webkit-scrollbar-track': {\n    boxShadow: 'inset 0 0 1px rgba(0, 0, 0, 0.3)',\n  },\n  '::-webkit-scrollbar-thumb': {\n    background: '#464d58',\n    borderRadius: '10px',\n  },\n});\n","import React, { useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { Button, ButtonGroup } from '@mui/material';\n\nfunction CustomTabs({ handleChange, value, tabs, sx }) {\n  const [currentTab, setCurrentTab] = useState(null);\n  const handleTabChange = (tab) => {\n    setCurrentTab(tab);\n    handleChange(tab);\n  };\n\n  useEffect(() => {\n    setCurrentTab(value);\n  }, [value]);\n\n  return (\n    <ButtonTabs sx={sx} color=\"primary\" size=\"small\" aria-label=\"small button group\">\n      {tabs.map((tab) => (\n        <Button\n          color=\"secondary\"\n          variant=\"outlined\"\n          key={tab.value}\n          onClick={() => handleTabChange(tab.value)}\n          className={currentTab === tab.value ? 'selected' : ''}\n        >\n          {tab.label}\n        </Button>\n      ))}\n    </ButtonTabs>\n  );\n}\n\nconst ButtonTabs = styled(ButtonGroup)({\n  backgroundColor: '#fff',\n  borderColor: 'black',\n  button: {\n    color: 'black',\n    border: '1px solid #857b7b !important',\n    padding: '3px 20px',\n    fontWeight: 'bold',\n    textTransform: 'capitalize',\n  },\n  'button.selected': {\n    backgroundColor: 'rgb(0 255 0)',\n  },\n});\n\nCustomTabs.propTypes = {\n  handleChange: propTypes.func.isRequired,\n  value: propTypes.string.isRequired,\n  tabs: propTypes.array,\n  sx: propTypes.any,\n};\n\nCustomTabs.defaultProps = {\n  tabs: [],\n  sx: {},\n};\n\nexport default CustomTabs;\n","import { filterCommonStock } from '../../Utils';\n\nconst apiKey = process.env.REACT_APP_FINHUB_APIKEY;\n\nconst baseURL = 'https://finnhub.io/api/v1';\n\nexport const searchStockBySymbol = async (searchString) => {\n  if (!searchString.trim()) return [];\n  const searchUrl = `${baseURL}/search?q=${searchString}&token=${apiKey}`;\n  const response = await fetch(searchUrl);\n  const { result, count } = await response.json();\n\n  return { count, result: filterCommonStock(result) };\n};\n\nexport const fetchStockPrice = async (stockInfo) => {\n  if (!stockInfo) {\n    return {};\n  }\n  const searchUrl = `${baseURL}/quote?symbol=${stockInfo.symbol}&token=${apiKey}`;\n  const response = await fetch(searchUrl);\n  const data = await response.json();\n\n  return data;\n};\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport Dialog from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\nimport { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Slide from '@mui/material/Slide';\nimport styled from '@emotion/styled';\nimport TextField from '@mui/material/TextField';\nimport { Switch, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport CustomTabs from '../UI/Tabs';\nimport { fetchStockPrice, searchStockBySymbol } from '../../services/finhub';\nimport {\n  calculateStopLoss,\n  calculateStopLossPercentageByPrice,\n  debounce,\n  validatePredictionData,\n} from '../../Utils';\nimport { useSnackbar } from '../../Hooks/useSnackbar';\nimport { AuthContext } from '../../Context/userAuth.context';\nimport { createPrediction } from '../../services/firebase/prediction.firebase';\nimport { PredictGradientButton } from '../UI/Buttons';\nimport LoadingProgress from '../UI/LoadingProgress';\n\nconst Transition = React.forwardRef((props, ref) => (\n  <Slide direction=\"down\" ref={ref} {...props} />\n));\n\nconst initialPayload = {\n  stock: {\n    price: null,\n  },\n  isSharePublicaly: true,\n  selectedDurationType: 'week',\n  target: '',\n  percentage: '10',\n  predictionDateTime: '',\n  afterPercentageTarget: '',\n};\n\nconst DurationType = {\n  day: 5,\n  week: 10,\n  month: 15,\n};\n\nfunction CreatePredictionModal({ open, onClose }) {\n  const [searchOptions, setSearchOptions] = useState([]);\n  const [loadingOption, setLoadingOption] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  const [payload, setPayload] = useState(initialPayload);\n\n  const { showError, showSuccessMsg } = useSnackbar();\n  const {\n    userData: { name: userName, uid: userId },\n  } = useContext(AuthContext);\n\n  const handleClose = () => {\n    onClose();\n    setPayload(initialPayload);\n  };\n\n  const handleSearch = async (searchText) => {\n    if (searchText?.trim()?.length >= 2) {\n      setLoadingOption(true);\n      const stocks = await searchStockBySymbol(searchText);\n      setSearchOptions(stocks?.result || []);\n      setLoadingOption(false);\n    }\n  };\n\n  const handleTabChange = (name, value) => {\n    const percentage = DurationType[value];\n    const { afterPercentageTarget } = calculateStopLoss({\n      stockPrice: payload.stock.price.c,\n      percentage,\n      target: payload.target,\n    });\n    setPayload({\n      ...payload,\n      [name]: value,\n      percentage,\n      afterPercentageTarget,\n    });\n  };\n\n  const getStockQuote = async (stockInfo) => {\n    // call API to fetch\n    const fullStockInfo = await fetchStockPrice(stockInfo);\n    setPayload({\n      ...payload,\n      stock: {\n        ...payload.stock,\n        price: fullStockInfo,\n      },\n    });\n  };\n\n  const handleStockChange = (stockInfo) => {\n    if (!stockInfo) {\n      setPayload(initialPayload);\n      return;\n    }\n    setPayload({\n      ...payload,\n      stock: {\n        ...payload.stock,\n        ...stockInfo,\n      },\n    });\n  };\n\n  const handleStopLossPercentageChange = (name, value) => {\n    if (value) {\n      const { afterPercentageTarget, percentage } = calculateStopLoss({\n        stockPrice: payload.stock.price.c,\n        target: payload.target,\n        percentage: value,\n      });\n      setPayload({\n        ...payload,\n        afterPercentageTarget,\n        percentage,\n      });\n    } else {\n      setPayload({\n        ...payload,\n        [name]: value,\n        afterPercentageTarget: '',\n      });\n    }\n  };\n\n  const handleStopLossAmountChange = (name, value) => {\n    if (value && Number(value) > 0) {\n      const percentage = calculateStopLossPercentageByPrice({\n        stockPrice: payload.stock.price.c,\n        targetPrice: value,\n      });\n      setPayload({\n        ...payload,\n        afterPercentageTarget: value,\n        percentage,\n      });\n    } else {\n      setPayload({\n        ...payload,\n        afterPercentageTarget: value,\n        percentage: '',\n      });\n    }\n  };\n\n  const optimizeSearch = useCallback(debounce(handleSearch), []);\n\n  const handleChange = (name, values) => {\n    setPayload({\n      ...payload,\n      [name]: values,\n    });\n  };\n\n  const handleSubmit = async () => {\n    // call API to save\n    console.log('payload', payload);\n    const errors = validatePredictionData(payload);\n    if (errors.length > 0) {\n      console.log('erros', errors);\n      errors.forEach((error) => {\n        showError(error);\n      });\n    } else {\n      setSubmitting(true);\n      const predictionPayload = { ...payload, userName, userId };\n      const { success, message } = await createPrediction(predictionPayload);\n      if (success) {\n        showSuccessMsg(message);\n        handleClose();\n      } else {\n        showError(message);\n      }\n      setSubmitting(false);\n    }\n  };\n\n  useEffect(() => {\n    if (payload?.stock?.symbol) {\n      getStockQuote(payload.stock);\n    }\n  }, [payload?.stock?.symbol]);\n\n  useEffect(() => {\n    const { afterPercentageTarget, percentage } = calculateStopLoss({\n      stockPrice: payload?.stock?.price?.c,\n      percentage: payload.percentage,\n      target: payload.target,\n    });\n    setPayload({\n      ...payload,\n      afterPercentageTarget,\n      percentage,\n    });\n  }, [payload?.target]);\n\n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={Transition}\n      maxWidth=\"sm\"\n      fullWidth\n      sx={{\n        '.MuiDialog-scrollPaper': {\n          justifyContent: 'center',\n          alignItems: 'flex-start',\n        },\n        '.MuiPaper-root': {\n          minHeight: '50%',\n        },\n      }}\n      onClose={handleClose}\n      aria-describedby=\"alert-dialog-slide-description\"\n    >\n      <ModalTitle>Create A Prediction</ModalTitle>\n      <DialogContent\n        sx={{\n          textAlign: 'center',\n          marginTop: '25px',\n          paddingTop: '15px !important',\n        }}\n      >\n        <Autocomplete\n          placeholder=\"Search by stock symbol e.g. AAPL\"\n          loading={loadingOption}\n          size=\"small\"\n          noOptionsText=\"No stock founds!\"\n          sx={{ margin: '0 auto', width: '80%' }}\n          onInputChange={({ target }) => optimizeSearch(target.value)}\n          options={searchOptions}\n          loadingText={<LoadingProgress />}\n          onChange={(event, values) => handleStockChange(values)}\n          getOptionLabel={(option) => `${option.description} (${option.symbol})`}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Search by stock symbol e.g. AAPL\"\n              placeholder=\"Search Stock\"\n            />\n          )}\n        />\n        {!payload?.stock?.price && (\n          <Box\n            sx={{\n              marginTop: '18px',\n            }}\n          >\n            <span>&#9432; Please search & select a stock for prediction.</span>\n          </Box>\n        )}\n        {payload?.stock?.price && (\n          <>\n            <CustomTabs\n              sx={{ marginTop: '18px' }}\n              handleChange={(value) => handleTabChange('selectedDurationType', value)}\n              value={payload.selectedDurationType}\n              tabs={[\n                {\n                  label: 'Daily',\n                  value: 'day',\n                },\n                { label: 'Weekly', value: 'week' },\n                { label: 'Monthly', value: 'month' },\n              ]}\n            />\n            <Typography sx={{ marginTop: '18px' }}>\n              <strong>\n                {payload?.stock?.symbol} @ ${payload?.stock?.price?.c} will reach a target of\n              </strong>\n            </Typography>\n            <Box\n              sx={{\n                width: '70%',\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                margin: '18px auto',\n              }}\n            >\n              <TextField\n                sx={{ maxWidth: '180px' }}\n                size=\"small\"\n                id=\"outlined-basic\"\n                label=\"Target price\"\n                variant=\"outlined\"\n                name=\"target\"\n                type=\"number\"\n                onChange={({ target }) => handleChange(target.name, target.value)}\n                value={payload?.target}\n              />\n              <Typography sx={{ margin: '0 2rem' }}>By</Typography>\n              <LocalizationProvider dateAdapter={AdapterMoment}>\n                <DesktopDatePicker\n                  inputFormat=\"MM/DD/YYYY\"\n                  value={payload?.predictionDateTime}\n                  disablePast\n                  size=\"sm\"\n                  sx={{\n                    '.MuiInputBase-root': {\n                      height: '40px',\n                      width: '180px',\n                      input: {\n                        letterSpacing: 'normal',\n                      },\n                    },\n                  }}\n                  onChange={(date) => handleChange('predictionDateTime', date)}\n                  renderInput={({ size, ...params }) => <TextField {...params} size=\"small\" />}\n                />\n              </LocalizationProvider>\n            </Box>\n            <Typography sx={{ marginTop: '18px' }}>\n              <strong>It has a stop-loss at</strong>\n            </Typography>\n            <Box\n              sx={{\n                width: '70%',\n                display: 'flex',\n                justifyContent: 'space-evenly',\n                alignItems: 'center',\n                margin: '18px auto',\n              }}\n            >\n              <TextField\n                sx={{ maxWidth: '120px' }}\n                size=\"small\"\n                id=\"outlined-basic\"\n                label=\"Stop loss %\"\n                name=\"percentage\"\n                type=\"number\"\n                onChange={({ target }) => handleStopLossPercentageChange(target.name, target.value)}\n                value={payload.percentage}\n                variant=\"outlined\"\n              />\n              <TextField\n                sx={{ maxWidth: '120px' }}\n                size=\"small\"\n                id=\"outlined-basic\"\n                name=\"afterPercentageTarget\"\n                onChange={({ target }) => handleStopLossAmountChange(target.name, target.value)}\n                value={payload?.afterPercentageTarget}\n                label=\"Stop loss $\"\n                type=\"number\"\n                variant=\"outlined\"\n              />\n            </Box>\n            <Box sx={{ marginTop: '24px' }}>\n              <PredictGradientButton onClick={handleSubmit} disabled={submitting}>\n                {submitting ? 'Submitting...' : 'Predict now'}\n              </PredictGradientButton>\n            </Box>\n            <Box\n              sx={{\n                fontWeight: 500,\n                padding: '10px',\n                textAlign: 'right',\n                fontSize: '14px',\n              }}\n            >\n              Allowed for public challenge\n              <CustomSwitch\n                name=\"isSharePublicaly\"\n                checked={payload.isSharePublicaly}\n                onChange={({ target }) => handleChange(target.name, target.checked)}\n              />\n            </Box>\n          </>\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nCreatePredictionModal.propTypes = {\n  open: propTypes.bool.isRequired,\n  onClose: propTypes.func.isRequired,\n};\n\nconst ModalTitle = styled(DialogTitle)({\n  padding: '10px',\n  fontWeight: 'bold',\n  fontSize: '28px',\n  color: '#ffcd29',\n  textAlign: 'center',\n  backgroundColor: '#273c58',\n  marginTop: '20px',\n});\n\nconst CustomSwitch = styled(Switch)(() => ({\n  '& .MuiSwitch-switchBase.Mui-checked': {\n    color: '#fff',\n  },\n  '& .MuiSwitch-switchBase.Mui-checked + .MuiSwitch-track': {\n    backgroundColor: 'rgb(34 255 34)',\n  },\n}));\n\nexport default CreatePredictionModal;\n","import styled from '@emotion/styled';\nimport { Avatar, Divider, Typography } from '@mui/material';\nimport Box from '@mui/system/Box';\nimport propTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport deepOrange from '@mui/material/colors/deepOrange';\nimport { green } from '@mui/material/colors';\nimport { fetchCompletedPrediction } from '../../services/firebase/prediction.firebase';\nimport LoadingProgress from '../UI/LoadingProgress';\nimport NoDataFound from '../UI/NotDataFound';\n\nfunction CompletedPredictions({ userID }) {\n  const [predictions, setPredictions] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const requestCompletedPrediction = async () => {\n    setLoading(true);\n    const response = await fetchCompletedPrediction(userID);\n    if (response.success) {\n      setPredictions(response.data);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    requestCompletedPrediction();\n    // fetch data from store\n  }, [userID]);\n\n  if (loading) {\n    return <LoadingProgress />;\n  }\n\n  return (\n    <Box>\n      {predictions.map(({ stock, target, id }) => (\n        <React.Fragment key={id}>\n          <CompletedCard>\n            <Box\n              sx={{\n                display: 'flex',\n                justifyContent: 'flex-start',\n                alignItems: 'center',\n                width: '30%',\n                '.danger': {\n                  color: deepOrange[400],\n                },\n                '.green': {\n                  color: green[400],\n                },\n              }}\n            >\n              <Box>\n                <Avatar\n                  sx={{ bgcolor: deepOrange[400] }}\n                  alt={stock.symbol}\n                  variant=\"rounded\"\n                  src=\"broken-iamge.jpeg\"\n                />\n              </Box>\n\n              <Box className=\"card-content\">\n                <Typography>\n                  {stock.description} ({stock.symbol})\n                </Typography>\n                <Typography variant=\"small\">\n                  buy from ${stock.price.c} to ${target}\n                </Typography>\n              </Box>\n            </Box>\n            <Typography variant=\"h6\" className=\"danger\">\n              50%\n            </Typography>\n          </CompletedCard>\n          <Divider sx={{ width: '35%' }} />\n        </React.Fragment>\n      ))}\n      {!loading && predictions.length === 0 && (\n        <Box sx={{ marginTop: '18px' }}>\n          <NoDataFound message=\"No completed predictions found!\" />\n        </Box>\n      )}\n    </Box>\n  );\n}\n\nconst CompletedCard = styled(Box)({\n  padding: '10px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'flex-start',\n  fontWeight: 500,\n  '.card-content': {\n    display: 'block',\n    lineHeight: 1,\n    marginLeft: '15px',\n  },\n});\n\nCompletedPredictions.propTypes = {\n  userID: propTypes.string.isRequired,\n};\n\nexport default CompletedPredictions;\n","/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react';\nimport propTypes from 'prop-types';\nimport moment from 'moment';\nimport Dialog from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\nimport Slide from '@mui/material/Slide';\nimport styled from '@emotion/styled';\nimport Box from '@mui/system/Box';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport Avatar from '@mui/material/Avatar';\nimport { deepOrange, green, red } from '@mui/material/colors';\nimport { PredictGradientButton } from '../UI/Buttons';\nimport { useSnackbar } from '../../Hooks/useSnackbar';\nimport { getCallType, getFormattedChallengePayload } from '../../Utils';\nimport { AuthContext } from '../../Context/userAuth.context';\nimport { createPrediction } from '../../services/firebase/prediction.firebase';\n\nconst Transition = React.forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\n\nexport default function IssueChallengeModal({ open, onClose, prediction = {} }) {\n  const [targetPrice, setTargetPrice] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { showError, showSuccessMsg } = useSnackbar();\n  const { userData } = React.useContext(AuthContext);\n\n  const handleClose = () => {\n    setTargetPrice('');\n    onClose();\n  };\n\n  const handleSubmitChallenge = async () => {\n    const stockPrice = Number(prediction?.stock.price.c);\n    const isForwardPrediction = prediction?.target > stockPrice;\n    const challengeTarget = Number(targetPrice);\n\n    if (!challengeTarget) {\n      showError('Target price is required!');\n      return;\n    }\n\n    if (isForwardPrediction && challengeTarget > stockPrice) {\n      showError(`Invalid prediction, Target Price should be Less than $${stockPrice}`);\n    } else if (!isForwardPrediction && challengeTarget < stockPrice) {\n      showError(`Invalid prediction, Target Price should be Greter than $${stockPrice}`);\n    } else {\n      // Call API to save\n      setIsSubmitting(true);\n      const newPaylaod = getFormattedChallengePayload(prediction, userData, targetPrice);\n      const { success, message } = await createPrediction(newPaylaod);\n      if (success) {\n        showSuccessMsg('Challenge prediction saved.');\n        handleClose();\n      } else {\n        console.log('ErrorMessage', message);\n      }\n      setIsSubmitting(false);\n    }\n  };\n\n  const call = getCallType(prediction?.stock?.price?.c, prediction?.target);\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-describedby=\"alert-dialog-slide-description\"\n        sx={{\n          '.MuiDialog-scrollPaper': {\n            justifyContent: 'center',\n            alignItems: 'flex-start',\n            zIndex: 2,\n          },\n          '.MuiPaper-root': {\n            minHeight: '50%',\n            width: '450px',\n          },\n          '.MuiDialogContent-root': {\n            padding: '0',\n          },\n        }}\n      >\n        <DialogContent>\n          <TopSection>\n            <Box sx={{ textAlign: 'center' }}>\n              <Box sx={{ position: 'absolute', left: '70px' }}>\n                <Avatar\n                  src=\"borken-image.jpeg\"\n                  alt={prediction?.userName || 'N/A'}\n                  sx={{ height: '70px', width: '70px' }}\n                />\n              </Box>\n              <Typography\n                sx={{\n                  color: 'yellow',\n                  fontSize: '22px',\n                  fontWeight: 600,\n                  marginTop: '2rem',\n                }}\n              >\n                {prediction?.userName || 'Predictany007'}\n              </Typography>\n              <Typography\n                sx={{ letterSpacing: 7, color: '#fff', fontWeight: 600, marginTop: '12px' }}\n              >\n                Predicts\n              </Typography>\n              <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                <Typography\n                  sx={{\n                    color: call === 'buy' ? green[400] : red[400],\n                    fontSize: '36px',\n                    textShadow: `0 -1px 8px ${call === 'buy' ? green[300] : red[300]}`,\n                    textTransform: 'uppercase',\n                  }}\n                >\n                  <b className={call}>{call}</b>\n                </Typography>\n                <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                  <Avatar\n                    variant=\"rounded\"\n                    src=\"broken-image.jpeg\"\n                    alt=\"TSLA\"\n                    sx={{\n                      width: '35px',\n                      height: '35px',\n                      bgcolor: deepOrange[400],\n                      marginLeft: '10px',\n                    }}\n                  />\n                  <Typography\n                    color=\"#fff\"\n                    sx={{\n                      display: 'grid',\n                      lineHeight: 1,\n                      marginLeft: '10px',\n                      small: { fontSize: '10px' },\n                    }}\n                  >\n                    <Typography variant=\"subtitle1\">{prediction?.stock?.symbol}</Typography>\n                    <small>{prediction?.stock?.description}</small>\n                  </Typography>\n                </Box>\n              </Box>\n              <Typography sx={{ color: 'rgb(218 218 218)', fontSize: '14px' }}>\n                Predicted: {moment(prediction?.predictionDateTime).format('LL')}\n              </Typography>\n              <FlexBox>\n                <span>Target Price: </span>\n                <span>$ {prediction?.target}</span>\n              </FlexBox>\n              <FlexBox>\n                <span>Target Date: </span>\n                <span>{prediction?.predictionDateTime}</span>\n              </FlexBox>\n            </Box>\n          </TopSection>\n          <BottomSection>\n            <Typography variant=\"subtitle2\">\n              To challenge, you must predict the opposite of the above user`s prediction\n            </Typography>\n            <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n              <Typography variant=\"subtitle1\">\n                <strong>Tesla will reach a target of:</strong>\n              </Typography>\n              <TextField\n                sx={{ maxWidth: '120px', marginLeft: '18px' }}\n                placeholder=\"Price $\"\n                name=\"targetPrice\"\n                size=\"small\"\n                type=\"number\"\n                value={targetPrice}\n                onChange={({ target }) => setTargetPrice(target.value)}\n              />\n            </Box>\n            <Box sx={{ textAlign: 'center', marginTop: '18px' }}>\n              <PredictGradientButton disabled={isSubmitting} onClick={handleSubmitChallenge}>\n                {isSubmitting ? 'Submitting...' : 'Issue challenge'}\n              </PredictGradientButton>\n            </Box>\n          </BottomSection>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n\nconst TopSection = styled(Box)({\n  padding: '1rem',\n  position: 'relative',\n  background: 'radial-gradient(circle, rgba(65,70,65,1) 1%, rgba(0,0,0,0.9780505952380952) 53%)',\n});\n\nconst BottomSection = styled(Box)({\n  backgroundColor: '#f6fafc',\n  padding: '1rem',\n  textAlign: 'center',\n  background:\n    'linear-gradient(50deg, rgba(206,230,243,1) 0%,' +\n    'rgba(255,255,255,1) 41%, rgba(206,230,243,1) 68%)',\n});\n\nconst FlexBox = styled(Box)({\n  color: '#fff',\n  fontSize: '14px',\n  fontWeight: 500,\n  display: 'flex',\n  justifyContent: 'space-between',\n  width: '170px',\n  margin: '0 auto',\n  lineHeight: 2,\n});\n\nIssueChallengeModal.propTypes = {\n  open: propTypes.bool.isRequired,\n  onClose: propTypes.func.isRequired,\n  prediction: propTypes.object,\n};\n\nIssueChallengeModal.defaultProps = {\n  prediction: null,\n};\n","import React, { useState } from 'react';\nimport propTypes from 'prop-types';\nimport Dialog from '@mui/material/Dialog';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Slide from '@mui/material/Slide';\nimport Box from '@mui/system/Box';\nimport PredictionLists from './PredictionList';\nimport CompletedPredictions from './CompletedPredictions';\nimport IssueChallengeModal from './IssueChallengeModal';\n\nconst Transition = React.forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\n\nexport default function SwitchUserModal({ open, onClose, userID, userName }) {\n  const [challengeModal, setChallengeModal] = useState({\n    open: false,\n    prediction: null,\n  });\n\n  console.log('userUID', userID);\n  const handleClose = () => {\n    onClose();\n  };\n\n  const closeChallengeModal = () => {\n    setChallengeModal({\n      open: false,\n      prediction: null,\n    });\n  };\n\n  const handleChallengeClick = (prediction) => {\n    setChallengeModal({\n      open: true,\n      prediction,\n    });\n  };\n\n  return (\n    <div>\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n        <AppBar sx={{ position: 'relative' }} color=\"default\">\n          <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n              <CloseIcon />\n            </IconButton>\n            <Typography sx={{ ml: 2, flex: 1 }} variant=\"h6\" component=\"div\">\n              {userName}`s Predictions\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Box sx={{ padding: '10px' }}>\n          <Typography variant=\"subtitle2\" sx={{ marginTop: '18px', fontWeight: 600 }}>\n            ONGOING PREDICTION\n          </Typography>\n          <Box sx={{ marginTop: '18px' }}>\n            <PredictionLists\n              userID={userID}\n              isChallengesList\n              onChallengeClick={handleChallengeClick}\n            />\n          </Box>\n          <Typography variant=\"subtitle2\" sx={{ marginTop: '18px', fontWeight: 600 }}>\n            COMPLETED PREDICTIONS\n          </Typography>\n          <CompletedPredictions userID={userID} />\n        </Box>\n        <IssueChallengeModal\n          open={challengeModal.open}\n          prediction={challengeModal.prediction}\n          onClose={closeChallengeModal}\n        />\n      </Dialog>\n    </div>\n  );\n}\n\nSwitchUserModal.propTypes = {\n  open: propTypes.bool.isRequired,\n  onClose: propTypes.func.isRequired,\n  userID: propTypes.string.isRequired,\n  userName: propTypes.string.isRequired,\n};\n","/* eslint-disable no-unused-vars */\nimport React, { useContext, useEffect, useState } from 'react';\nimport Container from '@mui/system/Container';\nimport Box from '@mui/system/Box';\nimport styled from '@emotion/styled';\nimport { Button, Typography } from '@mui/material';\nimport { AuthContext } from '../../Context/userAuth.context';\nimport { fetchUsersFromStore } from '../../services/firebase/users.firebase';\nimport UsersList from '../Prediction/UsersList';\nimport PredictionLists from '../Prediction/PredictionList';\nimport CreatePredictionModal from '../Prediction/CreatePredictionModal';\nimport CompletedPredictions from '../Prediction/CompletedPredictions';\nimport SwitchUserModal from '../Prediction/SwitchUserModal';\nimport { PredictButton } from '../UI/Buttons';\nimport LoadingProgress from '../UI/LoadingProgress';\n\nfunction Home() {\n  const {\n    userData: { uid: currentUserID, name },\n  } = useContext(AuthContext);\n  const [users, setUsers] = useState([]);\n  const [userLoading, setUserLoading] = useState(false);\n  const [showPredictModal, setShowPredictModal] = useState(false);\n  const [switchUser, setSwitchUser] = useState({\n    open: false,\n    userID: '',\n    userName: '',\n  });\n\n  const closeSwitchModal = () =>\n    setSwitchUser({\n      open: false,\n      userID: '',\n      userName: '',\n    });\n\n  const fetchUsers = async () => {\n    console.log('calling APIs');\n    setUserLoading(true);\n    const result = await fetchUsersFromStore(currentUserID);\n    setUsers(result);\n    setUserLoading(false);\n  };\n\n  const handleSelectUser = (user) => {\n    setSwitchUser({\n      open: true,\n      userID: user.id,\n      userName: user.name,\n    });\n  };\n\n  const togglePredictModal = () => setShowPredictModal(!showPredictModal);\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  return (\n    <Container maxWidth=\"xl\">\n      <HeadSection>\n        <Typography className=\"heading-text\">Hello, {name}</Typography>\n        <Box>\n          <PredictButton onClick={togglePredictModal}>Predict Now</PredictButton>\n        </Box>\n      </HeadSection>\n      <Typography variant=\"body2\" sx={{ fontWeight: 600, paddingTop: '18px' }}>\n        OTHER USERS\n      </Typography>\n      <Box sx={{ marginTop: '18px' }}>\n        {userLoading ? (\n          <LoadingProgress />\n        ) : (\n          <UsersList users={users} onSelectUser={handleSelectUser} />\n        )}\n      </Box>\n      <Typography variant=\"body2\" sx={{ fontWeight: 600, paddingTop: '18px' }}>\n        YOUR ONGOING PREDICTION\n      </Typography>\n      <Box sx={{ marginTop: '18px' }}>\n        <PredictionLists userID={currentUserID} />\n      </Box>\n      <Typography variant=\"body2\" sx={{ fontWeight: 600, paddingTop: '18px' }}>\n        YOUR COMPLETED PREDICTIONS\n      </Typography>\n      <Box sx={{ marginTop: '18px' }}>\n        <CompletedPredictions userID={currentUserID} />\n      </Box>\n      <CreatePredictionModal open={showPredictModal} onClose={togglePredictModal} />\n      <SwitchUserModal onClose={closeSwitchModal} {...switchUser} />\n    </Container>\n  );\n}\n\nconst HeadSection = styled('div')({\n  display: 'flex',\n  alignItems: 'flex-end',\n  justifyContent: 'space-between',\n  width: '100%',\n  margin: '20px 0',\n  '.heading-text': {\n    fontWeight: 'bold',\n    fontSize: '28px',\n  },\n});\n\nexport default Home;\n","import Home from './Home';\n\nexport default Home;\n","import { getDocs, collection, where, query, getDoc, doc } from 'firebase/firestore';\nimport { db } from '.';\n\nexport const USERS_COLLECTION = 'Users';\n\nexport const fetchUsersFromStore = async (currentUserID) => {\n  try {\n    const userQuery = query(collection(db, USERS_COLLECTION), where('id', '!=', currentUserID));\n    const querySnapshot = await getDocs(userQuery);\n    // eslint-disable-next-line no-debugger\n    const data = [];\n    querySnapshot.forEach((snapshot) => data.push(snapshot.data()));\n    return data;\n  } catch (err) {\n    console.log('err', err);\n    return [];\n  }\n};\n\nexport const fetchUserinfoByID = async (userID) => {\n  try {\n    const userRef = doc(db, USERS_COLLECTION, userID);\n    const snapshot = await getDoc(userRef);\n    return { success: true, data: snapshot.data() };\n  } catch (err) {\n    return { success: false, message: 'No user found!' };\n  }\n};\n"],"names":["stringToColor","string","i","hash","length","charCodeAt","color","concat","toString","slice","calculateStopLoss","data","target","percentage","Number","price","stockPrice","percentageValue","afterPercentageTarget","calculateStopLossPercentageByPrice","targetPrice","toFixed","validatePredictionData","payload","errors","push","predictionDateTime","getFormattedChallengePayload","prediction","currentUser","newTarget","formattedPrediction","_objectSpread","challenge","userId","userName","predictionID","id","name","_calculateStopLoss","stock","c","calculateDaysLeft","date","predictionDate","moment","currentDate","diff","getCallType","filterCommonStock","arguments","undefined","filter","r","_r$type","type","toLowerCase","symbol","includes","UsersList","_ref","_ref$users","users","onSelectUser","_jsx","Box","sx","display","gridGap","children","map","user","_jsxs","Stack","onClick","direction","spacing","textAlign","cursor","Avatar","height","width","bgcolor","charAt","UserName","styled","margin","defaultProps","TimeRemaining","_ref$daysLeft","daysLeft","TimeRemainingSection","className","alignItems","justifyContent","small","fontSize","position","borderRadius","padding","background","marginLeft","fontWeight","border","left","zIndex","top","backgroundColor","PredictionLiveWidget","props","stopLoss","predictionPrice","livePrice","WidgetSection","StockPriceBar","marginTop","alignContent","marginRight","PredictGradientButton","Button","textTransform","PredictButton","ChallengeButton","PredictionCard","_prediction$challenge","isChallengeCard","onChallengeClick","PredictionCardSection","UserInfoSection","src","Chip","label","size","StockInfoSection","alt","variant","backgroundImage","predictionCardImage","objectFit","minWidth","backgroundSize","boxShadow","opacity","NoDataFound","message","Typography","Prediction","_classCallCheck","this","isSharePublicaly","selectedDurationType","_createClass","key","value","toDate","format","parseFloat","toFirestore","Date","fromFirestore","snapshot","options","getUserPublicPredictionQuery","userID","query","collection","db","PREDICTION_COLLECTION","withConverter","predictionConverter","where","now","orderBy","getPublicPredictionQuery","getCompletedPredictionQuery","fetchUserPredictions","_asyncToGenerator","_regeneratorRuntime","mark","_callee","querySnapshot","wrap","_context","prev","next","getDocs","sent","forEach","doc","getFormattedData","abrupt","success","t0","console","log","stop","_x","apply","createPrediction","_ref2","_callee2","docRef","_context2","addDoc","updateDoc","_x2","fetchPublicPredictions","_ref3","_callee3","_context3","_x3","fetchCompletedPrediction","_ref4","_callee4","_context4","_x4","PredictionLists","isChallengesList","_useState","useState","_useState2","_slicedToArray","predictions","setPredictions","_useState3","_useState4","loading","setLoading","fetchPredictions","result","getPublicPredictions","useEffect","unsubscribe","onSnapshot","LoadingProgress","PredictionSection","OverFlowSection","flexDirection","flexWrap","overflowX","overflowY","CustomTabs","handleChange","tabs","currentTab","setCurrentTab","ButtonTabs","tab","handleTabChange","ButtonGroup","borderColor","button","apiKey","process","baseURL","searchStockBySymbol","searchString","searchUrl","response","_yield$response$json","count","trim","fetch","json","fetchStockPrice","stockInfo","Transition","React","ref","Slide","initialPayload","DurationType","day","week","month","ModalTitle","DialogTitle","CustomSwitch","Switch","_payload$stock2","_payload$stock4","_payload$stock5","_payload$stock6","_payload$stock7","_payload$stock7$price","open","onClose","searchOptions","setSearchOptions","loadingOption","setLoadingOption","_useState5","_useState6","submitting","setSubmitting","_useState7","_useState8","setPayload","_useSnackbar","useSnackbar","showError","showSuccessMsg","_useContext$userData","useContext","AuthContext","userData","uid","handleClose","handleSearch","searchText","_searchText$trim","stocks","getStockQuote","fullStockInfo","optimizeSearch","useCallback","func","timer","_len","args","Array","_key","context","clearTimeout","setTimeout","debounce","values","_defineProperty","handleSubmit","predictionPayload","_yield$createPredicti","error","_payload$stock","_payload$stock3","_payload$stock3$price","_calculateStopLoss3","Dialog","TransitionComponent","maxWidth","fullWidth","minHeight","DialogContent","paddingTop","Autocomplete","placeholder","noOptionsText","onInputChange","_ref5","loadingText","onChange","event","getOptionLabel","option","description","renderInput","params","TextField","_Fragment","_objectSpread2","_ref6","LocalizationProvider","dateAdapter","AdapterMoment","DesktopDatePicker","inputFormat","disablePast","input","letterSpacing","_ref7","_objectWithoutProperties","_excluded","_ref8","_calculateStopLoss2","_objectSpread3","handleStopLossPercentageChange","_ref9","handleStopLossAmountChange","disabled","checked","_ref10","CompletedCard","lineHeight","requestCompletedPrediction","deepOrange","green","Divider","IssueChallengeModal","_prediction$stock","_prediction$stock$pri","_prediction$stock2","_prediction$stock3","_ref$prediction","setTargetPrice","isSubmitting","setIsSubmitting","handleSubmitChallenge","isForwardPrediction","challengeTarget","newPaylaod","call","keepMounted","TopSection","red","textShadow","FlexBox","BottomSection","SwitchUserModal","challengeModal","setChallengeModal","fullScreen","AppBar","Toolbar","IconButton","edge","CloseIcon","ml","flex","component","CompletedPredictions","HeadSection","currentUserID","setUsers","userLoading","setUserLoading","showPredictModal","setShowPredictModal","switchUser","setSwitchUser","fetchUsers","fetchUsersFromStore","togglePredictModal","Container","CreatePredictionModal","USERS_COLLECTION","userQuery","fetchUserinfoByID","userRef","getDoc"],"sourceRoot":""}