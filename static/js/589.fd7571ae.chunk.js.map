{"version":3,"file":"static/js/589.fd7571ae.chunk.js","mappings":"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","sources":["Utils/index.js","components/UI/UsersList.js","components/UI/TimeRemaining.js","components/UI/PredictionLiveWidget.js","components/UI/Buttons.js","components/UI/PredictionCard.js","components/UI/NotDataFound.js","services/firebaseConverters/predictionConverter.js","services/firebase/queries.js","services/firebase/prediction.firebase.js","components/UI/PredictionList.js","components/UI/Tabs.js","services/finhub/index.js","components/UI/CreatePredictionModal.js","components/UI/CompletedPredictions.js","components/UI/IssueChallengeModal.js","components/UI/SwitchUserModal.js","components/Home/Home.js","components/Home/index.js","services/firebase/users.firebase.js"],"sourcesContent":["import moment from 'moment';\n\nexport function stringToColor(string) {\n  let hash = 0;\n  let i;\n\n  /* eslint-disable no-bitwise */\n  for (i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = '#';\n\n  for (i = 0; i < 3; i += 1) {\n    const value = (hash >> (i * 8)) & 0xff;\n    color += `00${value.toString(16)}`.slice(-2);\n  }\n  /* eslint-enable no-bitwise */\n\n  return color;\n}\n\nexport function stringAvatar(name) {\n  return {\n    sx: {\n      bgcolor: stringToColor(name),\n    },\n    children: `${name.charAt(0)}`,\n  };\n}\n\nexport function debounce(func) {\n  let timer;\n  // eslint-disable-next-line func-names\n  return function (...args) {\n    const context = this;\n    if (timer) clearTimeout(timer);\n    timer = setTimeout(() => {\n      timer = null;\n      func.apply(context, args);\n    }, 500);\n  };\n}\n\nexport function calculateStopLoss(data) {\n  // data = { target, percentage, stockPrice }\n  if (data.target && data.percentage) {\n    const target = Number(data.target);\n    const price = Number(data?.stockPrice);\n    const percentage = Number(data?.percentage);\n    const percentageValue = (price / 100) * percentage;\n    let afterPercentageTarget = 0;\n    if (target > price) {\n      afterPercentageTarget = price - percentageValue;\n    } else {\n      afterPercentageTarget = price + percentageValue;\n    }\n    return { afterPercentageTarget, percentage };\n  }\n  return { afterPercentageTarget: '', percentage: data.percentage };\n}\n\nexport const calculateStopLossPercentageByPrice = (data) => {\n  // { stockPrice, targetPrice }\n  const stockPrice = Number(data.stockPrice);\n  const targetPrice = Number(data.targetPrice);\n  const percentage = ((targetPrice - stockPrice) / ((stockPrice + targetPrice) / 2)) * 100;\n  return percentage.toFixed(2);\n};\n\nexport const validatePredictionData = (payload) => {\n  const errors = [];\n  if (!payload.target) errors.push('Target field required!');\n  if (!payload.predictionDateTime) errors.push('Please select prediction date.');\n  if (!payload.afterPercentageTarget || !payload.percentage)\n    errors.push('Please set the Stoploss field');\n\n  return errors;\n};\n\nexport const getFormattedPredictionPayload = (payload) => ({\n  ...payload,\n  target: Number(payload.target),\n  afterPercentageTarget: Number(payload.afterPercentageTarget),\n  percentage: Number(payload.percentage),\n  predictionDateTime: payload?.predictionDateTime?.toDate(),\n});\n\nexport const getFormattedChallengePayload = (prediction, currentUser, newTarget) => {\n  const formattedPrediction = { ...prediction };\n\n  formattedPrediction.challenge = {\n    userId: formattedPrediction.userId,\n    userName: formattedPrediction.userName,\n    predictionID: formattedPrediction.id,\n  };\n  formattedPrediction.userId = currentUser.id;\n  formattedPrediction.userName = currentUser.name;\n  formattedPrediction.target = newTarget;\n  const { afterPercentageTarget, percentage } = calculateStopLoss({\n    target: newTarget,\n    stockPrice: prediction?.stock.price.c,\n    percentage: formattedPrediction.percentage,\n  });\n  formattedPrediction.afterPercentageTarget = afterPercentageTarget;\n  formattedPrediction.percentage = percentage;\n\n  return formattedPrediction;\n};\n\nexport const calculateDaysLeft = (date) => {\n  const predictionDate = moment(date);\n  const currentDate = moment();\n  return predictionDate.diff(currentDate, 'days');\n};\n\nexport const getCallType = (stockPrice, targetPrice) => (targetPrice > stockPrice ? 'buy' : 'sell');\n\nexport const filterCommonStock = (data = []) => {\n  if (!data || data.length === 0) return [];\n\n  return data.filter(\n    (r) => r.type?.toLowerCase() === 'Common Stock'.toLowerCase() && !r?.symbol.includes('.'),\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from '@mui/material/Avatar';\nimport Stack from '@mui/system/Stack';\nimport styled from '@emotion/styled';\nimport { Box } from '@mui/material';\nimport { stringAvatar } from '../../Utils';\n\nfunction UsersList({ users = [], onSelectUser }) {\n  return (\n    <Box sx={{ display: 'flex', gridGap: '15px' }}>\n      {users.map((user) => (\n        <Stack\n          onClick={() => onSelectUser(user)}\n          direction=\"row\"\n          spacing={2}\n          key={user.id}\n          sx={{ display: 'grid', textAlign: 'left', cursor: 'pointer' }}\n        >\n          <Avatar sx={{ height: '100px', width: '100px' }} {...stringAvatar(user.name)} />\n          <UserName>{user.name}</UserName>\n        </Stack>\n      ))}\n    </Box>\n  );\n}\n\nconst UserName = styled('small')({\n  margin: '0 !important',\n  textAlign: 'center',\n});\n\nUsersList.propTypes = {\n  users: PropTypes.array,\n  onSelectUser: PropTypes.func.isRequired,\n};\n\nUsersList.defaultProps = {\n  users: [],\n};\n\nexport default UsersList;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\n\nexport default function TimeRemaining({ daysLeft = 0 }) {\n  return (\n    <TimeRemainingSection>\n      <small>Time Remaining</small>\n      <div className=\"time-section\">\n        <span className=\"round\">{daysLeft}</span>\n        <div className=\"day-left-text\">\n          <span className=\"day\">Day</span>\n          <span className=\"left\">Left</span>\n        </div>\n      </div>\n    </TimeRemainingSection>\n  );\n}\n\nconst TimeRemainingSection = styled('div')({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'flex-start',\n  small: {\n    color: '#fff',\n    fontSize: '12px',\n  },\n  '.time-section': {\n    position: 'relative',\n  },\n  '.round': {\n    borderRadius: '50%',\n    padding: '8px',\n    width: '15px',\n    fontSize: '15px',\n    height: '13px',\n    background: 'green',\n    marginLeft: '10px',\n    color: '#fff',\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontWeight: 'bold',\n    border: '3px solid black',\n  },\n  '.day-left-text': {\n    display: 'inline-grid',\n    color: '#fff',\n    fontSize: '10px',\n    width: '25px',\n    position: 'absolute',\n    left: '40px',\n    zIndex: '-1',\n    top: '5px',\n    fontWeight: 'bold',\n    '.day': {\n      backgroundColor: 'red',\n      padding: '0 10px',\n    },\n    '.left': {\n      backgroundColor: 'green',\n      padding: '0 10px',\n    },\n  },\n});\n\nTimeRemaining.propTypes = {\n  daysLeft: PropTypes.number.isRequired,\n};\n","import styled from '@emotion/styled';\nimport propTypes from 'prop-types';\nimport React from 'react';\n\nexport default function PredictionLiveWidget(props) {\n  // eslint-disable-next-line no-unused-vars\n  const { stopLoss, predictionPrice, targetPrice, livePrice } = props;\n  return (\n    <WidgetSection>\n      <div className=\"round-grey stop-loss-section\">\n        <span>${stopLoss}</span>\n      </div>\n      <StockPriceBar />\n      <div className=\"round-grey prediction-section\">\n        <span>${predictionPrice}</span>\n      </div>\n      <StockPriceBar />\n      <div className=\"round-grey target-price-section\">\n        <span>${targetPrice}</span>\n      </div>\n      {/* <span className=\"livePrice\">{livePrice}</span> */}\n    </WidgetSection>\n  );\n}\n\nconst WidgetSection = styled('div')({\n  display: 'inline-flex',\n  color: '#fff',\n  marginTop: '10px',\n  justifyContent: 'center',\n  alignItems: 'center',\n  width: '100%',\n  '.round-grey': {\n    height: '40px',\n    width: '40px',\n    fontSize: '10px',\n    borderRadius: '50%',\n    backgroundColor: '#494f56',\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontWeight: '500',\n  },\n});\n\nconst StockPriceBar = styled('div')({\n  width: '30%',\n  height: '12px',\n  alignContent: 'center',\n  backgroundColor: '#494f56',\n  marginRight: '-2px',\n  marginLeft: '-2px',\n});\n\nPredictionLiveWidget.propTypes = {\n  stopLoss: propTypes.number.isRequired,\n  predictionPrice: propTypes.number.isRequired,\n  targetPrice: propTypes.number.isRequired,\n  livePrice: propTypes.number.isRequired,\n};\n","import Button from '@mui/material/Button';\nimport styled from '@emotion/styled';\n\nexport const PredictGradientButton = styled(Button)({\n  padding: '10px 18px',\n  backgroundColor: 'rgb(34 255 34)',\n  borderRadius: '30px',\n  background: 'radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(34,254,34,1) 54%)',\n  color: 'black',\n  fontWeight: 'bold',\n  textTransform: 'capitalize',\n  '&:disabled': {\n    background: '#dedede',\n  },\n});\n\nexport const PredictButton = styled(Button)({\n  background: '#FF6A6A',\n  borderRadius: '40px',\n  color: '#fff',\n  fontWeight: 600,\n  '&:hover': {\n    backgroundColor: '#FF6A6A',\n  },\n});\n\nexport const ChallengeButton = styled(Button)({\n  borderRadius: '20px',\n  backgroundColor: '#6aff79',\n  textTransform: 'capitalize',\n  padding: '5px 20px',\n  fontWeight: 600,\n  '&:disabled': {\n    backgroundColor: '#dedede',\n  },\n});\n","import styled from '@emotion/styled';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Avatar from '@mui/material/Avatar';\nimport Box from '@mui/system/Box';\nimport Chip from '@mui/material/Chip';\nimport predictionCardImage from '../../assets/images/prediction-card.jpeg';\nimport TimeRemaining from './TimeRemaining';\nimport PredictionLiveWidget from './PredictionLiveWidget';\nimport { calculateDaysLeft } from '../../Utils';\nimport { ChallengeButton } from './Buttons';\n\nexport default function PredictionCard({ prediction, isChallengeCard, onChallengeClick }) {\n  const { target, stock, predictionDateTime, afterPercentageTarget, userName } = prediction;\n  return (\n    <Box>\n      <PredictionCardSection>\n        <UserInfoSection>\n          <div className=\"user-info\">\n            <Avatar sx={{ marginLeft: '10px' }} src=\"./broken-image.jpeg\" />\n            <span className=\"p-name\">{userName || 'Predictany007'}</span>\n            {prediction?.challenge?.userName && (\n              <Chip\n                sx={{ marginLeft: '10px', textAlign: 'right' }}\n                label=\"C\"\n                color=\"primary\"\n                size=\"small\"\n              />\n            )}\n          </div>\n        </UserInfoSection>\n        <StockInfoSection>\n          <div className=\"head\">\n            <div className=\"head-left\">\n              <Avatar color=\"yellow\" alt=\"BTC\" />\n              <span className=\"stock-symbol\">{stock.symbol}</span>\n            </div>\n            <div className=\"head-right\">\n              <div className=\"content\">\n                <strong>Target Price:</strong> <strong className=\"green\">${target}</strong>\n              </div>\n              <div className=\"content\">\n                <strong>Target date:</strong>{' '}\n                <strong className=\"green\">{predictionDateTime}</strong>\n              </div>\n              <div className=\"content\">\n                <strong>Stop-loss:</strong>\n                <strong className=\"danger\">${afterPercentageTarget}</strong>\n              </div>\n            </div>\n          </div>\n          <hr />\n          <TimeRemaining daysLeft={calculateDaysLeft(predictionDateTime)} />\n          <PredictionLiveWidget\n            targetPrice={Number(target)}\n            predictionPrice={stock.price.c}\n            stopLoss={Number(afterPercentageTarget)}\n            livePrice={100}\n          />\n        </StockInfoSection>\n      </PredictionCardSection>\n      {isChallengeCard && (\n        <Box sx={{ textAlign: 'center', padding: '5px 0' }}>\n          <ChallengeButton\n            onClick={() => onChallengeClick(prediction)}\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Challenge\n          </ChallengeButton>\n        </Box>\n      )}\n    </Box>\n  );\n}\n\nconst PredictionCardSection = styled('div')({\n  backgroundColor: 'grey',\n  borderRadius: '4px',\n  backgroundImage: `url(${predictionCardImage})`,\n  objectFit: 'cover',\n  height: '220px',\n  minWidth: '380px',\n  backgroundSize: 'cover',\n  padding: '6px 0',\n});\n\nconst UserInfoSection = styled('div')({\n  width: '70%',\n  boxShadow: '4px -2px 2px 4px #263a47',\n  height: '35px',\n  background: 'black',\n  color: '#ffd230',\n  fontWeight: 'bold',\n  padding: '5px',\n  borderRadius: '10px',\n  opacity: '.9',\n  '.user-info': {\n    display: 'inline-flex',\n    alignItems: 'center',\n    '.p-name': {\n      marginLeft: '10px',\n      fontSize: '20px',\n    },\n  },\n});\n\nconst StockInfoSection = styled('div')({\n  width: '70%',\n  padding: '10px',\n  borderRadius: '4px',\n  boxShadow: '4px -2px 2px 4px #263a47',\n  height: 'calc(100% - 70px)',\n  background: 'black',\n  marginTop: '10px',\n  opacity: '.9',\n  '.head': {\n    height: '40px',\n    display: 'inline-flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%',\n    '.head-left': {\n      color: '#fff',\n      display: 'inline-flex',\n      alignItems: 'center',\n      '.stock-symbol': {\n        fontSize: '25px',\n        marginLeft: '10px',\n      },\n    },\n    '.head-right': {\n      color: '#fff',\n      fontSize: '11px',\n      width: '50%',\n      display: 'grid',\n      gridGap: '2px',\n      '.content': {\n        display: 'inline-flex',\n        justifyContent: 'space-between',\n        alignContent: 'center',\n      },\n      'strong.green': {\n        color: 'green',\n      },\n      'strong.danger': {\n        color: 'red',\n      },\n    },\n  },\n});\n\nPredictionCard.propTypes = {\n  prediction: PropTypes.any.isRequired,\n  isChallengeCard: PropTypes.bool,\n  onChallengeClick: PropTypes.func,\n};\n\nPredictionCard.defaultProps = {\n  isChallengeCard: true,\n  onChallengeClick: () => {},\n};\n","import propTypes from 'prop-types';\nimport React from 'react';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/system/Box';\n\nexport default function NoDataFound({ message }) {\n  return (\n    <Box\n      sx={{\n        border: '1px solid #dedede',\n        borderRadius: '10px',\n        textAlign: 'center',\n        padding: '1rem',\n      }}\n    >\n      <Typography>&#9432; {message}</Typography>\n    </Box>\n  );\n}\n\nNoDataFound.propTypes = {\n  message: propTypes.string.isRequired,\n};\n","import moment from 'moment/moment';\n\nclass Prediction {\n  constructor(prediction) {\n    this.id = prediction.id;\n    this.isSharePublicaly = prediction.isSharePublicaly;\n    this.percentage = prediction.percentage;\n    this.predictionDateTime = prediction.predictionDateTime;\n    this.afterPercentageTarget = prediction.afterPercentageTarget;\n    this.selectedDurationType = prediction.selectedDurationType;\n    this.stock = prediction.stock;\n    this.target = prediction.target;\n    this.userId = prediction.userId;\n    this.userName = prediction.userName;\n    this.challenge = prediction.challenge;\n  }\n\n  getFormattedData() {\n    return {\n      id: this.id,\n      isSharePublicaly: this.isSharePublicaly,\n      percentage: this.percentage,\n      predictionDateTime: moment(this.predictionDateTime.toDate()).format('L'),\n      afterPercentageTarget: parseFloat(this.afterPercentageTarget).toFixed(2),\n      selectedDurationType: this.selectedDurationType,\n      stock: this.stock,\n      target: this.target,\n      userId: this.userId,\n      userName: this.userName,\n      challenge: this.challenge,\n    };\n  }\n}\n\nconst predictionConverter = {\n  toFirestore: (prediction) => ({\n    ...prediction,\n    target: Number(prediction.target),\n    afterPercentageTarget: Number(prediction.afterPercentageTarget),\n    percentage: Number(prediction.percentage),\n    predictionDateTime: new Date(prediction.predictionDateTime),\n  }),\n  fromFirestore: (snapshot, options) => {\n    const data = snapshot.data(options);\n    return new Prediction(data);\n  },\n};\n\nexport default predictionConverter;\n","import { collection, orderBy, query, where } from 'firebase/firestore';\nimport { db } from '.';\nimport predictionConverter from '../firebaseConverters/predictionConverter';\nimport { PREDICTION_COLLECTION } from './prediction.firebase';\n\nexport const getUserPublicPredictionQuery = (userID) =>\n  query(\n    collection(db, PREDICTION_COLLECTION).withConverter(predictionConverter),\n    where('userId', '==', userID),\n    where(\n      'predictionDateTime',\n      '>=',\n      new Date(Date.now() + 1000),\n      orderBy('predictionDateTime', 'desc'),\n    ),\n  );\n\nexport const getPublicPredictionQuery = (userID) =>\n  query(\n    collection(db, PREDICTION_COLLECTION).withConverter(predictionConverter),\n    where('userId', '==', userID),\n    where('predictionDateTime', '>=', new Date(Date.now() + 1000)),\n    where('isSharePublicaly', '==', true),\n    orderBy('predictionDateTime', 'desc'),\n  );\n\nexport const getCompletedPredictionQuery = (userID) =>\n  query(\n    collection(db, PREDICTION_COLLECTION).withConverter(predictionConverter),\n    where('userId', '==', userID),\n    where('predictionDateTime', '<', new Date(Date.now() + 1000)),\n  );\n","import { getDocs, collection, addDoc, updateDoc } from 'firebase/firestore';\nimport { db } from '.';\nimport predictionConverter from '../firebaseConverters/predictionConverter';\nimport {\n  getCompletedPredictionQuery,\n  getPublicPredictionQuery,\n  getUserPublicPredictionQuery,\n} from './queries';\n\nexport const PREDICTION_COLLECTION = 'public_predictions';\n\nexport const fetchUserPredictions = async (userID) => {\n  try {\n    const querySnapshot = await getDocs(getUserPublicPredictionQuery(userID));\n    const data = [];\n    querySnapshot.forEach((doc) => data.push(doc.data().getFormattedData()));\n    return { success: true, data };\n  } catch (err) {\n    console.log('err', err);\n    return { success: false, data: [] };\n  }\n};\n\nexport const createPrediction = async (prediction) => {\n  try {\n    const docRef = await addDoc(\n      collection(db, PREDICTION_COLLECTION).withConverter(predictionConverter),\n      prediction,\n    );\n    await updateDoc(docRef, { id: docRef.id });\n    console.log('Prediction created ==> ', docRef.id);\n    if (docRef.id) {\n      return { success: true, message: 'Prediction added!' };\n    }\n    return { success: false, message: 'Prediction failed to saved' };\n  } catch (err) {\n    console.log('err', err);\n    return { success: false, message: 'Something went wrong!' };\n  }\n};\n\nexport const fetchPublicPredictions = async (userID) => {\n  try {\n    const querySnapshot = await getDocs(getPublicPredictionQuery(userID));\n    // eslint-disable-next-line no-debugger\n    const data = [];\n    querySnapshot.forEach((doc) => data.push(doc.data().getFormattedData()));\n    return { success: true, data };\n  } catch (err) {\n    console.log('err', err);\n    return { success: false, data: [] };\n  }\n};\n\nexport const fetchCompletedPrediction = async (userID) => {\n  try {\n    const querySnapshot = await getDocs(getCompletedPredictionQuery(userID));\n    const data = [];\n    querySnapshot.forEach((doc) => data.push(doc.data().getFormattedData()));\n    return { success: true, data };\n  } catch (err) {\n    console.log('Error while fetching completed predictins', err);\n    return { success: false, message: 'Reuest failed to for complete preidiction data' };\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { onSnapshot } from 'firebase/firestore';\nimport PredictionCard from './PredictionCard';\nimport LoadingProgress from './LoadingProgress';\nimport NoDataFound from './NotDataFound';\nimport {\n  fetchPublicPredictions,\n  fetchUserPredictions,\n} from '../../services/firebase/prediction.firebase';\nimport {\n  getPublicPredictionQuery,\n  getUserPublicPredictionQuery,\n} from '../../services/firebase/queries';\n\nexport default function PredictionLists({ userID, isChallengesList, onChallengeClick }) {\n  const [predictions, setPredictions] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const fetchPredictions = async () => {\n    setLoading(true);\n    const result = await fetchUserPredictions(userID);\n    setPredictions(result.data);\n    setLoading(false);\n  };\n\n  const getPublicPredictions = async () => {\n    setLoading(true);\n    const result = await fetchPublicPredictions(userID);\n    setPredictions(result.data);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    let unsubscribe;\n    if (isChallengesList) {\n      getPublicPredictions();\n      unsubscribe = onSnapshot(getPublicPredictionQuery(userID), (querySnapshot) => {\n        const data = [];\n        querySnapshot.forEach((snapshot) => data.push(snapshot.data().getFormattedData()));\n        setPredictions(data);\n      });\n    } else {\n      fetchPredictions();\n      unsubscribe = onSnapshot(getUserPublicPredictionQuery(userID), (querySnapshot) => {\n        const data = [];\n        querySnapshot.forEach((snapshot) => data.push(snapshot.data().getFormattedData()));\n        setPredictions(data);\n      });\n    }\n\n    return () => {\n      if (unsubscribe) {\n        unsubscribe();\n      }\n    };\n  }, []);\n\n  if (loading) {\n    return <LoadingProgress />;\n  }\n\n  return (\n    <PredictionSection>\n      <OverFlowSection>\n        {predictions.map((prediction) => (\n          <PredictionCard\n            key={prediction.id}\n            onChallengeClick={onChallengeClick}\n            prediction={prediction}\n            isChallengeCard={isChallengesList}\n          />\n        ))}\n        {!loading && predictions.length === 0 && (\n          <NoDataFound message=\"No ongoing prediction found\" />\n        )}\n      </OverFlowSection>\n    </PredictionSection>\n  );\n}\n\nPredictionLists.propTypes = {\n  userID: PropTypes.string.isRequired,\n  isChallengesList: PropTypes.bool,\n  onChallengeClick: PropTypes.func,\n};\n\nPredictionLists.defaultProps = {\n  isChallengesList: false,\n  onChallengeClick: () => {},\n};\n\nconst PredictionSection = styled('div')({\n  padding: '5px',\n  width: '100%',\n});\n\nconst OverFlowSection = styled('div')({\n  alignItems: 'flex-start',\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'nowrap',\n  overflowX: 'auto',\n  overflowY: 'hidden',\n  gridGap: '18px',\n  '::-webkit-scrollbar': {\n    height: '10px',\n    margin: '5px',\n  },\n  '::-webkit-scrollbar-track': {\n    boxShadow: 'inset 0 0 1px rgba(0, 0, 0, 0.3)',\n  },\n  '::-webkit-scrollbar-thumb': {\n    background: '#464d58',\n    borderRadius: '10px',\n  },\n});\n","import React, { useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { Button, ButtonGroup } from '@mui/material';\n\nfunction CustomTabs({ handleChange, value, tabs, sx }) {\n  const [currentTab, setCurrentTab] = useState(null);\n  const handleTabChange = (tab) => {\n    setCurrentTab(tab);\n    handleChange(tab);\n  };\n\n  useEffect(() => {\n    setCurrentTab(value);\n  }, [value]);\n\n  return (\n    <ButtonTabs sx={sx} color=\"primary\" size=\"small\" aria-label=\"small button group\">\n      {tabs.map((tab) => (\n        <Button\n          color=\"secondary\"\n          variant=\"outlined\"\n          key={tab.value}\n          onClick={() => handleTabChange(tab.value)}\n          className={currentTab === tab.value ? 'selected' : ''}\n        >\n          {tab.label}\n        </Button>\n      ))}\n    </ButtonTabs>\n  );\n}\n\nconst ButtonTabs = styled(ButtonGroup)({\n  backgroundColor: '#fff',\n  borderColor: 'black',\n  button: {\n    color: 'black',\n    border: '1px solid #857b7b !important',\n    padding: '3px 20px',\n    fontWeight: 'bold',\n    textTransform: 'capitalize',\n  },\n  'button.selected': {\n    backgroundColor: 'rgb(0 255 0)',\n  },\n});\n\nCustomTabs.propTypes = {\n  handleChange: propTypes.func.isRequired,\n  value: propTypes.string.isRequired,\n  tabs: propTypes.array,\n  sx: propTypes.any,\n};\n\nCustomTabs.defaultProps = {\n  tabs: [],\n  sx: {},\n};\n\nexport default CustomTabs;\n","import { filterCommonStock } from '../../Utils';\n\nconst apiKey = process.env.REACT_APP_FINHUB_APIKEY;\n\nconst baseURL = 'https://finnhub.io/api/v1';\n\nexport const searchStockBySymbol = async (searchString) => {\n  if (!searchString.trim()) return [];\n  const searchUrl = `${baseURL}/search?q=${searchString}&token=${apiKey}`;\n  const response = await fetch(searchUrl);\n  const { result, count } = await response.json();\n\n  return { count, result: filterCommonStock(result) };\n};\n\nexport const fetchStockPrice = async (stockInfo) => {\n  if (!stockInfo) {\n    return {};\n  }\n  const searchUrl = `${baseURL}/quote?symbol=${stockInfo.symbol}&token=${apiKey}`;\n  const response = await fetch(searchUrl);\n  const data = await response.json();\n\n  return data;\n};\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport Dialog from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\nimport { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport Slide from '@mui/material/Slide';\nimport styled from '@emotion/styled';\nimport TextField from '@mui/material/TextField';\nimport { Switch, Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport CustomTabs from './Tabs';\nimport { fetchStockPrice, searchStockBySymbol } from '../../services/finhub';\nimport {\n  calculateStopLoss,\n  calculateStopLossPercentageByPrice,\n  debounce,\n  getFormattedPredictionPayload,\n  validatePredictionData,\n} from '../../Utils';\nimport { useSnackbar } from '../../Hooks/useSnackbar';\nimport { AuthContext } from '../../Context/userAuth.context';\nimport { createPrediction } from '../../services/firebase/prediction.firebase';\nimport { PredictGradientButton } from './Buttons';\nimport LoadingProgress from './LoadingProgress';\n\nconst Transition = React.forwardRef((props, ref) => (\n  <Slide direction=\"down\" ref={ref} {...props} />\n));\n\nconst initialPayload = {\n  stock: {\n    price: null,\n  },\n  isSharePublicaly: true,\n  selectedDurationType: 'week',\n  target: '',\n  percentage: '10',\n  predictionDateTime: '',\n  afterPercentageTarget: '',\n};\n\nconst DurationType = {\n  day: 5,\n  week: 10,\n  month: 15,\n};\n\nfunction CreatePredictionModal({ open, onClose }) {\n  const [searchOptions, setSearchOptions] = useState([]);\n  const [loadingOption, setLoadingOption] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  const [payload, setPayload] = useState(initialPayload);\n\n  const { showError, showSuccessMsg } = useSnackbar();\n  const {\n    userData: { name: userName, uid: userId },\n  } = useContext(AuthContext);\n\n  const handleClose = () => {\n    onClose();\n    setPayload(initialPayload);\n  };\n\n  const handleSearch = async (searchText) => {\n    if (searchText?.trim()?.length >= 2) {\n      setLoadingOption(true);\n      const stocks = await searchStockBySymbol(searchText);\n      setSearchOptions(stocks?.result || []);\n      setLoadingOption(false);\n    }\n  };\n\n  const handleTabChange = (name, value) => {\n    const percentage = DurationType[value];\n    const { afterPercentageTarget } = calculateStopLoss({\n      stockPrice: payload.stock.price.c,\n      percentage,\n      target: payload.target,\n    });\n    setPayload({\n      ...payload,\n      [name]: value,\n      percentage,\n      afterPercentageTarget,\n    });\n  };\n\n  const getStockQuote = async (stockInfo) => {\n    // call API to fetch\n    const fullStockInfo = await fetchStockPrice(stockInfo);\n    setPayload({\n      ...payload,\n      stock: {\n        ...payload.stock,\n        price: fullStockInfo,\n      },\n    });\n  };\n\n  const handleStockChange = (stockInfo) => {\n    if (!stockInfo) {\n      setPayload(initialPayload);\n      return;\n    }\n    setPayload({\n      ...payload,\n      stock: {\n        ...payload.stock,\n        ...stockInfo,\n      },\n    });\n  };\n\n  const handleStopLossPercentageChange = (name, value) => {\n    if (value) {\n      const { afterPercentageTarget, percentage } = calculateStopLoss({\n        stockPrice: payload.stock.price.c,\n        target: payload.target,\n        percentage: value,\n      });\n      setPayload({\n        ...payload,\n        afterPercentageTarget,\n        percentage,\n      });\n    } else {\n      setPayload({\n        ...payload,\n        [name]: value,\n        afterPercentageTarget: '',\n      });\n    }\n  };\n\n  const handleStopLossAmountChange = (name, value) => {\n    if (value && Number(value) > 0) {\n      const percentage = calculateStopLossPercentageByPrice({\n        stockPrice: payload.stock.price.c,\n        targetPrice: value,\n      });\n      setPayload({\n        ...payload,\n        afterPercentageTarget: value,\n        percentage,\n      });\n    } else {\n      setPayload({\n        ...payload,\n        afterPercentageTarget: value,\n        percentage: '',\n      });\n    }\n  };\n\n  const optimizeSearch = useCallback(debounce(handleSearch), []);\n\n  const handleChange = (name, values) => {\n    setPayload({\n      ...payload,\n      [name]: values,\n    });\n  };\n\n  const handleSubmit = async () => {\n    // call API to save\n    console.log('payload', payload);\n    const errors = validatePredictionData(payload);\n    if (errors.length > 0) {\n      console.log('erros', errors);\n      errors.forEach((error) => {\n        showError(error);\n      });\n    } else {\n      setSubmitting(true);\n      const predictionPayload = getFormattedPredictionPayload({ ...payload, userName, userId });\n      const { success, message } = await createPrediction(predictionPayload);\n      if (success) {\n        showSuccessMsg(message);\n        handleClose();\n      } else {\n        showError(message);\n      }\n      setSubmitting(false);\n    }\n  };\n\n  useEffect(() => {\n    if (payload?.stock?.symbol) {\n      getStockQuote(payload.stock);\n    }\n  }, [payload?.stock?.symbol]);\n\n  useEffect(() => {\n    const { afterPercentageTarget, percentage } = calculateStopLoss({\n      stockPrice: payload?.stock?.price?.c,\n      percentage: payload.percentage,\n      target: payload.target,\n    });\n    setPayload({\n      ...payload,\n      afterPercentageTarget,\n      percentage,\n    });\n  }, [payload?.target]);\n\n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={Transition}\n      maxWidth=\"sm\"\n      fullWidth\n      sx={{\n        '.MuiDialog-scrollPaper': {\n          justifyContent: 'center',\n          alignItems: 'flex-start',\n        },\n        '.MuiPaper-root': {\n          minHeight: '50%',\n        },\n      }}\n      onClose={handleClose}\n      aria-describedby=\"alert-dialog-slide-description\"\n    >\n      <ModalTitle>Create A Prediction</ModalTitle>\n      <DialogContent\n        sx={{\n          textAlign: 'center',\n          marginTop: '25px',\n          paddingTop: '15px !important',\n        }}\n      >\n        <Autocomplete\n          placeholder=\"Search by stock symbol e.g. AAPL\"\n          loading={loadingOption}\n          size=\"small\"\n          noOptionsText=\"No stock founds!\"\n          sx={{ margin: '0 auto', width: '80%' }}\n          onInputChange={({ target }) => optimizeSearch(target.value)}\n          options={searchOptions}\n          loadingText={<LoadingProgress />}\n          onChange={(event, values) => handleStockChange(values)}\n          getOptionLabel={(option) => `${option.description} (${option.symbol})`}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"Search by stock symbol e.g. AAPL\"\n              placeholder=\"Search Stock\"\n            />\n          )}\n        />\n        {!payload?.stock?.price && (\n          <Box\n            sx={{\n              marginTop: '18px',\n            }}\n          >\n            <span>&#9432; Please search & select a stock for prediction.</span>\n          </Box>\n        )}\n        {payload?.stock?.price && (\n          <>\n            <CustomTabs\n              sx={{ marginTop: '18px' }}\n              handleChange={(value) => handleTabChange('selectedDurationType', value)}\n              value={payload.selectedDurationType}\n              tabs={[\n                {\n                  label: 'Daily',\n                  value: 'day',\n                },\n                { label: 'Weekly', value: 'week' },\n                { label: 'Monthly', value: 'month' },\n              ]}\n            />\n            <Typography sx={{ marginTop: '18px' }}>\n              <strong>\n                {payload?.stock?.symbol} @ ${payload?.stock?.price?.c} will reach a target of\n              </strong>\n            </Typography>\n            <Box\n              sx={{\n                width: '70%',\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                margin: '18px auto',\n              }}\n            >\n              <TextField\n                sx={{ maxWidth: '180px' }}\n                size=\"small\"\n                id=\"outlined-basic\"\n                label=\"Target price\"\n                variant=\"outlined\"\n                name=\"target\"\n                type=\"number\"\n                onChange={({ target }) => handleChange(target.name, target.value)}\n                value={payload?.target}\n              />\n              <Typography sx={{ margin: '0 2rem' }}>By</Typography>\n              <LocalizationProvider dateAdapter={AdapterMoment}>\n                <DesktopDatePicker\n                  inputFormat=\"MM/DD/YYYY\"\n                  value={payload?.predictionDateTime}\n                  disablePast\n                  size=\"sm\"\n                  sx={{\n                    '.MuiInputBase-root': {\n                      height: '40px',\n                      width: '180px',\n                      input: {\n                        letterSpacing: 'normal',\n                      },\n                    },\n                  }}\n                  onChange={(date) => handleChange('predictionDateTime', date)}\n                  renderInput={({ size, ...params }) => <TextField {...params} size=\"small\" />}\n                />\n              </LocalizationProvider>\n            </Box>\n            <Typography sx={{ marginTop: '18px' }}>\n              <strong>It has a stop-loss at</strong>\n            </Typography>\n            <Box\n              sx={{\n                width: '70%',\n                display: 'flex',\n                justifyContent: 'space-evenly',\n                alignItems: 'center',\n                margin: '18px auto',\n              }}\n            >\n              <TextField\n                sx={{ maxWidth: '120px' }}\n                size=\"small\"\n                id=\"outlined-basic\"\n                label=\"Stop loss %\"\n                name=\"percentage\"\n                type=\"number\"\n                onChange={({ target }) => handleStopLossPercentageChange(target.name, target.value)}\n                value={payload.percentage}\n                variant=\"outlined\"\n              />\n              <TextField\n                sx={{ maxWidth: '120px' }}\n                size=\"small\"\n                id=\"outlined-basic\"\n                name=\"afterPercentageTarget\"\n                onChange={({ target }) => handleStopLossAmountChange(target.name, target.value)}\n                value={payload?.afterPercentageTarget}\n                label=\"Stop loss $\"\n                type=\"number\"\n                variant=\"outlined\"\n              />\n            </Box>\n            <Box sx={{ marginTop: '24px' }}>\n              <PredictGradientButton onClick={handleSubmit} disabled={submitting}>\n                {submitting ? 'Submitting...' : 'Predict now'}\n              </PredictGradientButton>\n            </Box>\n            <Box\n              sx={{\n                fontWeight: 500,\n                padding: '10px',\n                textAlign: 'right',\n                fontSize: '14px',\n              }}\n            >\n              Allowed for public challenge\n              <CustomSwitch\n                name=\"isSharePublicaly\"\n                checked={payload.isSharePublicaly}\n                onChange={({ target }) => handleChange(target.name, target.checked)}\n              />\n            </Box>\n          </>\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n}\n\nCreatePredictionModal.propTypes = {\n  open: propTypes.bool.isRequired,\n  onClose: propTypes.func.isRequired,\n};\n\nconst ModalTitle = styled(DialogTitle)({\n  padding: '10px',\n  fontWeight: 'bold',\n  fontSize: '28px',\n  color: '#ffcd29',\n  textAlign: 'center',\n  backgroundColor: '#273c58',\n  marginTop: '20px',\n});\n\nconst CustomSwitch = styled(Switch)(() => ({\n  '& .MuiSwitch-switchBase.Mui-checked': {\n    color: '#fff',\n  },\n  '& .MuiSwitch-switchBase.Mui-checked + .MuiSwitch-track': {\n    backgroundColor: 'rgb(34 255 34)',\n  },\n}));\n\nexport default CreatePredictionModal;\n","import styled from '@emotion/styled';\nimport { Avatar, Divider, Typography } from '@mui/material';\nimport Box from '@mui/system/Box';\nimport propTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport deepOrange from '@mui/material/colors/deepOrange';\nimport { green } from '@mui/material/colors';\nimport { fetchCompletedPrediction } from '../../services/firebase/prediction.firebase';\nimport LoadingProgress from './LoadingProgress';\nimport NoDataFound from './NotDataFound';\n\nfunction CompletedPredictions({ userID }) {\n  const [predictions, setPredictions] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const requestCompletedPrediction = async () => {\n    setLoading(true);\n    const response = await fetchCompletedPrediction(userID);\n    if (response.success) {\n      setPredictions(response.data);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    requestCompletedPrediction();\n    // fetch data from store\n  }, [userID]);\n\n  if (loading) {\n    return <LoadingProgress />;\n  }\n\n  return (\n    <Box>\n      {predictions.map(({ stock, target, id }) => (\n        <React.Fragment key={id}>\n          <CompletedCard>\n            <Box\n              sx={{\n                display: 'flex',\n                justifyContent: 'flex-start',\n                alignItems: 'center',\n                width: '30%',\n                '.danger': {\n                  color: deepOrange[400],\n                },\n                '.green': {\n                  color: green[400],\n                },\n              }}\n            >\n              <Box>\n                <Avatar\n                  sx={{ bgcolor: deepOrange[400] }}\n                  alt={stock.symbol}\n                  variant=\"rounded\"\n                  src=\"broken-iamge.jpeg\"\n                />\n              </Box>\n\n              <Box className=\"card-content\">\n                <Typography>\n                  {stock.description} ({stock.symbol})\n                </Typography>\n                <Typography variant=\"small\">\n                  buy from ${stock.price.c} to ${target}\n                </Typography>\n              </Box>\n            </Box>\n            <Typography variant=\"h6\" className=\"danger\">\n              50%\n            </Typography>\n          </CompletedCard>\n          <Divider sx={{ width: '35%' }} />\n        </React.Fragment>\n      ))}\n      {!loading && predictions.length === 0 && (\n        <Box sx={{ marginTop: '18px' }}>\n          <NoDataFound message=\"No completed predictions found!\" />\n        </Box>\n      )}\n    </Box>\n  );\n}\n\nconst CompletedCard = styled(Box)({\n  padding: '10px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'flex-start',\n  fontWeight: 500,\n  '.card-content': {\n    display: 'block',\n    lineHeight: 1,\n    marginLeft: '15px',\n  },\n});\n\nCompletedPredictions.propTypes = {\n  userID: propTypes.string.isRequired,\n};\n\nexport default CompletedPredictions;\n","/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react';\nimport propTypes from 'prop-types';\nimport moment from 'moment';\nimport Dialog from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\nimport Slide from '@mui/material/Slide';\nimport styled from '@emotion/styled';\nimport Box from '@mui/system/Box';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport Avatar from '@mui/material/Avatar';\nimport { deepOrange, green, red } from '@mui/material/colors';\nimport { PredictGradientButton } from './Buttons';\nimport { useSnackbar } from '../../Hooks/useSnackbar';\nimport { getCallType, getFormattedChallengePayload } from '../../Utils';\nimport { AuthContext } from '../../Context/userAuth.context';\nimport { createPrediction } from '../../services/firebase/prediction.firebase';\n\nconst Transition = React.forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\n\nexport default function IssueChallengeModal({ open, onClose, prediction = {} }) {\n  const [targetPrice, setTargetPrice] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { showError, showSuccessMsg } = useSnackbar();\n  const { userData } = React.useContext(AuthContext);\n\n  const handleClose = () => {\n    setTargetPrice('');\n    onClose();\n  };\n\n  const handleSubmitChallenge = async () => {\n    const stockPrice = Number(prediction?.stock.price.c);\n    const isForwardPrediction = prediction?.target > stockPrice;\n    const challengeTarget = Number(targetPrice);\n\n    if (!challengeTarget) {\n      showError('Target price is required!');\n      return;\n    }\n\n    if (isForwardPrediction && challengeTarget > stockPrice) {\n      showError(`Invalid prediction, Target Price should be Less than $${stockPrice}`);\n    } else if (!isForwardPrediction && challengeTarget < stockPrice) {\n      showError(`Invalid prediction, Target Price should be Greter than $${stockPrice}`);\n    } else {\n      // Call API to save\n      setIsSubmitting(true);\n      const newPaylaod = getFormattedChallengePayload(prediction, userData, targetPrice);\n      const { success, message } = await createPrediction(newPaylaod);\n      if (success) {\n        showSuccessMsg('Challenge prediction saved.');\n        handleClose();\n      } else {\n        console.log('ErrorMessage', message);\n      }\n      setIsSubmitting(false);\n    }\n  };\n\n  const call = getCallType(prediction?.stock?.price?.c, prediction?.target);\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-describedby=\"alert-dialog-slide-description\"\n        sx={{\n          '.MuiDialog-scrollPaper': {\n            justifyContent: 'center',\n            alignItems: 'flex-start',\n            zIndex: 2,\n          },\n          '.MuiPaper-root': {\n            minHeight: '50%',\n            width: '450px',\n          },\n          '.MuiDialogContent-root': {\n            padding: '0',\n          },\n        }}\n      >\n        <DialogContent>\n          <TopSection>\n            <Box sx={{ textAlign: 'center' }}>\n              <Box sx={{ position: 'absolute', left: '70px' }}>\n                <Avatar\n                  src=\"borken-image.jpeg\"\n                  alt={prediction?.userName || 'N/A'}\n                  sx={{ height: '70px', width: '70px' }}\n                />\n              </Box>\n              <Typography\n                sx={{\n                  color: 'yellow',\n                  fontSize: '22px',\n                  fontWeight: 600,\n                  marginTop: '2rem',\n                }}\n              >\n                {prediction?.userName || 'Predictany007'}\n              </Typography>\n              <Typography\n                sx={{ letterSpacing: 7, color: '#fff', fontWeight: 600, marginTop: '12px' }}\n              >\n                Predicts\n              </Typography>\n              <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                <Typography\n                  sx={{\n                    color: call === 'buy' ? green[400] : red[400],\n                    fontSize: '36px',\n                    textShadow: `0 -1px 8px ${call === 'buy' ? green[300] : red[300]}`,\n                    textTransform: 'uppercase',\n                  }}\n                >\n                  <b className={call}>{call}</b>\n                </Typography>\n                <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                  <Avatar\n                    variant=\"rounded\"\n                    src=\"broken-image.jpeg\"\n                    alt=\"TSLA\"\n                    sx={{\n                      width: '35px',\n                      height: '35px',\n                      bgcolor: deepOrange[400],\n                      marginLeft: '10px',\n                    }}\n                  />\n                  <Typography\n                    color=\"#fff\"\n                    sx={{\n                      display: 'grid',\n                      lineHeight: 1,\n                      marginLeft: '10px',\n                      small: { fontSize: '10px' },\n                    }}\n                  >\n                    <Typography variant=\"subtitle1\">{prediction?.stock?.symbol}</Typography>\n                    <small>{prediction?.stock?.description}</small>\n                  </Typography>\n                </Box>\n              </Box>\n              <Typography sx={{ color: 'rgb(218 218 218)', fontSize: '14px' }}>\n                Predicted: {moment(prediction?.predictionDateTime).format('LL')}\n              </Typography>\n              <FlexBox>\n                <span>Target Price: </span>\n                <span>$ {prediction?.target}</span>\n              </FlexBox>\n              <FlexBox>\n                <span>Target Date: </span>\n                <span>{prediction?.predictionDateTime}</span>\n              </FlexBox>\n            </Box>\n          </TopSection>\n          <BottomSection>\n            <Typography variant=\"subtitle2\">\n              To challenge, you must predict the opposite of the above user`s prediction\n            </Typography>\n            <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n              <Typography variant=\"subtitle1\">\n                <strong>Tesla will reach a target of:</strong>\n              </Typography>\n              <TextField\n                sx={{ maxWidth: '120px', marginLeft: '18px' }}\n                placeholder=\"Price $\"\n                name=\"targetPrice\"\n                size=\"small\"\n                type=\"number\"\n                value={targetPrice}\n                onChange={({ target }) => setTargetPrice(target.value)}\n              />\n            </Box>\n            <Box sx={{ textAlign: 'center', marginTop: '18px' }}>\n              <PredictGradientButton disabled={isSubmitting} onClick={handleSubmitChallenge}>\n                {isSubmitting ? 'Submitting...' : 'Issue challenge'}\n              </PredictGradientButton>\n            </Box>\n          </BottomSection>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n\nconst TopSection = styled(Box)({\n  padding: '1rem',\n  position: 'relative',\n  background: 'radial-gradient(circle, rgba(65,70,65,1) 1%, rgba(0,0,0,0.9780505952380952) 53%)',\n});\n\nconst BottomSection = styled(Box)({\n  backgroundColor: '#f6fafc',\n  padding: '1rem',\n  textAlign: 'center',\n  background:\n    'linear-gradient(50deg, rgba(206,230,243,1) 0%,' +\n    'rgba(255,255,255,1) 41%, rgba(206,230,243,1) 68%)',\n});\n\nconst FlexBox = styled(Box)({\n  color: '#fff',\n  fontSize: '14px',\n  fontWeight: 500,\n  display: 'flex',\n  justifyContent: 'space-between',\n  width: '170px',\n  margin: '0 auto',\n  lineHeight: 2,\n});\n\nIssueChallengeModal.propTypes = {\n  open: propTypes.bool.isRequired,\n  onClose: propTypes.func.isRequired,\n  prediction: propTypes.object,\n};\n\nIssueChallengeModal.defaultProps = {\n  prediction: null,\n};\n","import React, { useState } from 'react';\nimport propTypes from 'prop-types';\nimport Dialog from '@mui/material/Dialog';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Slide from '@mui/material/Slide';\nimport Box from '@mui/system/Box';\nimport PredictionLists from './PredictionList';\nimport CompletedPredictions from './CompletedPredictions';\nimport IssueChallengeModal from './IssueChallengeModal';\n\nconst Transition = React.forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\n\nexport default function SwitchUserModal({ open, onClose, userID, userName }) {\n  const [challengeModal, setChallengeModal] = useState({\n    open: false,\n    prediction: null,\n  });\n\n  console.log('userUID', userID);\n  const handleClose = () => {\n    onClose();\n  };\n\n  const closeChallengeModal = () => {\n    setChallengeModal({\n      open: false,\n      prediction: null,\n    });\n  };\n\n  const handleChallengeClick = (prediction) => {\n    setChallengeModal({\n      open: true,\n      prediction,\n    });\n  };\n\n  return (\n    <div>\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n        <AppBar sx={{ position: 'relative' }} color=\"default\">\n          <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n              <CloseIcon />\n            </IconButton>\n            <Typography sx={{ ml: 2, flex: 1 }} variant=\"h6\" component=\"div\">\n              {userName}`s Predictions\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Box sx={{ padding: '10px' }}>\n          <Typography variant=\"subtitle2\" sx={{ marginTop: '18px', fontWeight: 600 }}>\n            ONGOING PREDICTION\n          </Typography>\n          <Box sx={{ marginTop: '18px' }}>\n            <PredictionLists\n              userID={userID}\n              isChallengesList\n              onChallengeClick={handleChallengeClick}\n            />\n          </Box>\n          <Typography variant=\"subtitle2\" sx={{ marginTop: '18px', fontWeight: 600 }}>\n            COMPLETED PREDICTIONS\n          </Typography>\n          <CompletedPredictions userID={userID} />\n        </Box>\n        <IssueChallengeModal\n          open={challengeModal.open}\n          prediction={challengeModal.prediction}\n          onClose={closeChallengeModal}\n        />\n      </Dialog>\n    </div>\n  );\n}\n\nSwitchUserModal.propTypes = {\n  open: propTypes.bool.isRequired,\n  onClose: propTypes.func.isRequired,\n  userID: propTypes.string.isRequired,\n  userName: propTypes.string.isRequired,\n};\n","/* eslint-disable no-unused-vars */\nimport React, { useContext, useEffect, useState } from 'react';\nimport Container from '@mui/system/Container';\nimport Box from '@mui/system/Box';\nimport styled from '@emotion/styled';\nimport { Button, Typography } from '@mui/material';\nimport { AuthContext } from '../../Context/userAuth.context';\nimport { fetchUsersFromStore } from '../../services/firebase/users.firebase';\nimport UsersList from '../UI/UsersList';\nimport PredictionLists from '../UI/PredictionList';\nimport CreatePredictionModal from '../UI/CreatePredictionModal';\nimport CompletedPredictions from '../UI/CompletedPredictions';\nimport SwitchUserModal from '../UI/SwitchUserModal';\nimport { PredictButton } from '../UI/Buttons';\n\nfunction Home() {\n  const {\n    userData: { uid: currentUserID, name },\n  } = useContext(AuthContext);\n  const [users, setUsers] = useState([]);\n  const [showPredictModal, setShowPredictModal] = useState(false);\n  const [switchUser, setSwitchUser] = useState({\n    open: false,\n    userID: '',\n    userName: '',\n  });\n\n  const closeSwitchModal = () =>\n    setSwitchUser({\n      open: false,\n      userID: '',\n      userName: '',\n    });\n\n  const fetchUsers = async () => {\n    console.log('calling APIs');\n    const result = await fetchUsersFromStore(currentUserID);\n    setUsers(result);\n  };\n\n  const handleSelectUser = (user) => {\n    setSwitchUser({\n      open: true,\n      userID: user.id,\n      userName: user.name,\n    });\n  };\n\n  const togglePredictModal = () => setShowPredictModal(!showPredictModal);\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  return (\n    <Container maxWidth=\"xl\">\n      <HeadSection>\n        <Typography className=\"heading-text\">Hello, {name}</Typography>\n        <Box>\n          <PredictButton onClick={togglePredictModal}>Predict Now</PredictButton>\n        </Box>\n      </HeadSection>\n      <Typography variant=\"body2\" sx={{ fontWeight: 600, paddingTop: '18px' }}>\n        OTHER USERS\n      </Typography>\n      <Box sx={{ marginTop: '18px' }}>\n        <UsersList users={users} onSelectUser={handleSelectUser} />\n      </Box>\n      <Typography variant=\"body2\" sx={{ fontWeight: 600, paddingTop: '18px' }}>\n        YOUR ONGOING PREDICTION\n      </Typography>\n      <Box sx={{ marginTop: '18px' }}>\n        <PredictionLists userID={currentUserID} />\n      </Box>\n      <Typography variant=\"body2\" sx={{ fontWeight: 600, paddingTop: '18px' }}>\n        YOUR COMPLETED PREDICTIONS\n      </Typography>\n      <Box sx={{ marginTop: '18px' }}>\n        <CompletedPredictions userID={currentUserID} />\n      </Box>\n      <CreatePredictionModal open={showPredictModal} onClose={togglePredictModal} />\n      <SwitchUserModal onClose={closeSwitchModal} {...switchUser} />\n    </Container>\n  );\n}\n\nconst HeadSection = styled('div')({\n  display: 'flex',\n  alignItems: 'flex-end',\n  justifyContent: 'space-between',\n  width: '100%',\n  margin: '20px 0',\n  '.heading-text': {\n    fontWeight: 'bold',\n    fontSize: '28px',\n  },\n});\n\nexport default Home;\n","import Home from './Home';\n\nexport default Home;\n","import { getDocs, collection, where, query, getDoc, doc } from 'firebase/firestore';\nimport { db } from '.';\n\nexport const USERS_COLLECTION = 'Users';\n\nexport const fetchUsersFromStore = async (currentUserID) => {\n  try {\n    const userQuery = query(collection(db, USERS_COLLECTION), where('id', '!=', currentUserID));\n    const querySnapshot = await getDocs(userQuery);\n    // eslint-disable-next-line no-debugger\n    const data = [];\n    querySnapshot.forEach((snapshot) => data.push(snapshot.data()));\n    return data;\n  } catch (err) {\n    console.log('err', err);\n    return [];\n  }\n};\n\nexport const fetchUserinfoByID = async (userID) => {\n  try {\n    const userRef = doc(db, USERS_COLLECTION, userID);\n    const snapshot = await getDoc(userRef);\n    return { success: true, data: snapshot.data() };\n  } catch (err) {\n    return { success: false, message: 'No user found!' };\n  }\n};\n"],"names":["stringToColor","string","i","hash","length","charCodeAt","color","concat","toString","slice","calculateStopLoss","data","target","percentage","Number","price","stockPrice","percentageValue","afterPercentageTarget","calculateStopLossPercentageByPrice","targetPrice","toFixed","validatePredictionData","payload","errors","push","predictionDateTime","getFormattedPredictionPayload","_payload$predictionDa","_objectSpread","toDate","getFormattedChallengePayload","prediction","currentUser","newTarget","formattedPrediction","challenge","userId","userName","predictionID","id","name","_calculateStopLoss","stock","c","calculateDaysLeft","date","predictionDate","moment","currentDate","diff","getCallType","filterCommonStock","arguments","undefined","filter","r","_r$type","type","toLowerCase","symbol","includes","UsersList","_ref","_ref$users","users","onSelectUser","_jsx","Box","sx","display","gridGap","children","map","user","_jsxs","Stack","onClick","direction","spacing","textAlign","cursor","Avatar","height","width","bgcolor","charAt","UserName","styled","margin","defaultProps","TimeRemaining","_ref$daysLeft","daysLeft","TimeRemainingSection","className","alignItems","justifyContent","small","fontSize","position","borderRadius","padding","background","marginLeft","fontWeight","border","left","zIndex","top","backgroundColor","PredictionLiveWidget","props","stopLoss","predictionPrice","livePrice","WidgetSection","StockPriceBar","marginTop","alignContent","marginRight","PredictGradientButton","Button","textTransform","PredictButton","ChallengeButton","PredictionCard","_prediction$challenge","isChallengeCard","onChallengeClick","PredictionCardSection","UserInfoSection","src","Chip","label","size","StockInfoSection","alt","variant","backgroundImage","predictionCardImage","objectFit","minWidth","backgroundSize","boxShadow","opacity","NoDataFound","message","Typography","Prediction","_classCallCheck","this","isSharePublicaly","selectedDurationType","_createClass","key","value","format","parseFloat","toFirestore","Date","fromFirestore","snapshot","options","getUserPublicPredictionQuery","userID","query","collection","db","PREDICTION_COLLECTION","withConverter","predictionConverter","where","now","orderBy","getPublicPredictionQuery","getCompletedPredictionQuery","fetchUserPredictions","_asyncToGenerator","_regeneratorRuntime","mark","_callee","querySnapshot","wrap","_context","prev","next","getDocs","sent","forEach","doc","getFormattedData","abrupt","success","t0","console","log","stop","_x","apply","createPrediction","_ref2","_callee2","docRef","_context2","addDoc","updateDoc","_x2","fetchPublicPredictions","_ref3","_callee3","_context3","_x3","fetchCompletedPrediction","_ref4","_callee4","_context4","_x4","PredictionLists","isChallengesList","_useState","useState","_useState2","_slicedToArray","predictions","setPredictions","_useState3","_useState4","loading","setLoading","fetchPredictions","result","getPublicPredictions","useEffect","unsubscribe","onSnapshot","LoadingProgress","PredictionSection","OverFlowSection","flexDirection","flexWrap","overflowX","overflowY","CustomTabs","handleChange","tabs","currentTab","setCurrentTab","ButtonTabs","tab","handleTabChange","ButtonGroup","borderColor","button","apiKey","process","baseURL","searchStockBySymbol","searchString","searchUrl","response","_yield$response$json","count","trim","fetch","json","fetchStockPrice","stockInfo","Transition","React","ref","Slide","initialPayload","DurationType","day","week","month","ModalTitle","DialogTitle","CustomSwitch","Switch","_payload$stock2","_payload$stock4","_payload$stock5","_payload$stock6","_payload$stock7","_payload$stock7$price","open","onClose","searchOptions","setSearchOptions","loadingOption","setLoadingOption","_useState5","_useState6","submitting","setSubmitting","_useState7","_useState8","setPayload","_useSnackbar","useSnackbar","showError","showSuccessMsg","_useContext$userData","useContext","AuthContext","userData","uid","handleClose","handleSearch","searchText","_searchText$trim","stocks","getStockQuote","fullStockInfo","optimizeSearch","useCallback","func","timer","_len","args","Array","_key","context","clearTimeout","setTimeout","debounce","values","_defineProperty","handleSubmit","predictionPayload","_yield$createPredicti","error","_payload$stock","_payload$stock3","_payload$stock3$price","_calculateStopLoss3","Dialog","TransitionComponent","maxWidth","fullWidth","minHeight","DialogContent","paddingTop","Autocomplete","placeholder","noOptionsText","onInputChange","_ref5","loadingText","onChange","event","getOptionLabel","option","description","renderInput","params","TextField","_Fragment","_objectSpread2","_ref6","LocalizationProvider","dateAdapter","AdapterMoment","DesktopDatePicker","inputFormat","disablePast","input","letterSpacing","_ref7","_objectWithoutProperties","_excluded","_ref8","_calculateStopLoss2","_objectSpread3","handleStopLossPercentageChange","_ref9","handleStopLossAmountChange","disabled","checked","_ref10","CompletedCard","lineHeight","requestCompletedPrediction","deepOrange","green","Divider","IssueChallengeModal","_prediction$stock","_prediction$stock$pri","_prediction$stock2","_prediction$stock3","_ref$prediction","setTargetPrice","isSubmitting","setIsSubmitting","handleSubmitChallenge","isForwardPrediction","challengeTarget","newPaylaod","call","keepMounted","TopSection","red","textShadow","FlexBox","BottomSection","SwitchUserModal","challengeModal","setChallengeModal","fullScreen","AppBar","Toolbar","IconButton","edge","CloseIcon","ml","flex","component","CompletedPredictions","HeadSection","currentUserID","setUsers","showPredictModal","setShowPredictModal","switchUser","setSwitchUser","fetchUsers","fetchUsersFromStore","togglePredictModal","Container","CreatePredictionModal","USERS_COLLECTION","userQuery","fetchUserinfoByID","userRef","getDoc"],"sourceRoot":""}